!function(){"use strict";const e=document.querySelector(".edit-button"),t=(document.querySelector(".form__submit-button"),document.querySelector(".form__close-button"),document.querySelector(".popup_type_edit-profile")),o=document.querySelector(".profile__user-name"),r=document.querySelector(".profile__user-profession"),s=(document.querySelector(".profile__avatar"),document.querySelector("#name-input"),document.querySelector("#about-me-input"),document.querySelector(".add-button")),n=(document.querySelector(".form__close-button_type_new-place"),document.querySelector(".popup_type_new-place")),a=document.querySelector(".form__submit-button_place"),i=(document.querySelector(".card-container"),document.querySelector(".popup_type_photo")),c=document.querySelector(".popup__photo"),l=document.querySelector(".popup__photo-caption"),u=document.querySelector(".popup__close-button");class p{constructor({items:e,renderer:t},o){this._itemsArray=e,this._renderer=t,this._container=o}addItem(e){this._container.append(e)}renderItems(){this._itemsArray.forEach((e=>{this._renderer(e)}))}test(){console.log(this._itemsArray)}}const m=/^[A-Za-z\-]{2,100}$/,_=/^[A-Za-z\-]{2,20}$/,d=/^[A-Za-z\-]{4,20}$/,h=/^[A-Za-z\-]{4,500}$/;class S{constructor(e){this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass}switchingInput(e){switch(e.target.name){case"name":this._checkInputValidity(m,e.target,this._formSelector);break;case" aboutMe":this._checkInputValidity(_,e.target,this._formSelector);break;case"placeName":this._checkInputValidity(d,e.target,this._formSelector);break;case"link":this._checkInputValidity(h,e.target,this._formSelector)}}_checkInputValidity(e,t,o){const r=document.getElementById(o).querySelector(`.${t.id}-error`);e.test(t.value)?(r.classList.remove(this._errorClass),r.textContent="",t.classList.remove(this._inputErrorClass)):(r.textContent=t.validationMessage,r.classList.add(this._errorClass),t.classList.add(this._inputErrorClass))}isValid(e){let t="";const o=document.getElementById(e);return t=!!Array.from(o.querySelectorAll(this._inputSelector)).every((e=>e.validity.valid)),t}toggleBtnState(e){const t=document.getElementById(e).querySelector(this._submitButtonSelector);!0===this.isValid(e)?t.classList.remove(this._inactiveButtonClass):t.classList.add(this._inactiveButtonClass)}enableValidation(){const e=document.getElementById(this._formSelector),t=Array.from(e.querySelectorAll(this._inputSelector));this.toggleBtnState(this._formSelector),t.forEach((e=>{e.addEventListener("input",(e=>{this.switchingInput(e),this.toggleBtnState(this._formSelector)}))}))}test(){const e=document.getElementById(this._formSelector).querySelector(`.${evt.target.id}-error`);console.log(e)}}const f=document.querySelector(".card-container");class y{constructor({data:e,photoHandler:t},o){this._name=e.placeName,this._link=e.link,this._templateSelector=o,this._photoHandler=t}getTemplate(){return document.querySelector(this._templateSelector).content.querySelector(".place-card").cloneNode(!0)}generateCard(){this._cardElement=this.getTemplate(),this._cardElement.querySelector(".place-card__name").textContent=this._name,this._cardElement.querySelector(".place-card__photo").src=this._link,this._setEventListeners();const e=this._cardElement.querySelector(".trash-button");return e.addEventListener("click",(()=>{e.closest(".place-card").remove()})),this._cardElement.querySelector(".like-button").addEventListener("click",(function(e){e.target.classList.toggle("like-button_active")})),this._cardElement}_handleOpenPopup(){this._photoHandler(this._link,this._name)}_handleClosePopup(){c.src=" ",l.textContent=" ",i.classList.remove("popup_opened")}_setEventListeners(){this._cardElement.querySelector(".place-card__photo").addEventListener("click",(()=>{this._handleOpenPopup()})),u.addEventListener("click",(()=>{this._handleClosePopup()}))}test(){this.generateCard()}}class g{constructor(e){this._popup=e,this._form=e.querySelector(".form")}open(){this._popup.classList.add("popup_opened")}close(){this._popup.classList.remove("popup_opened")}_handleEscClose(){document.addEventListener("keydown",(e=>{e.preventDefault,"Escape"===e.key&&this.close()}))}setEventListeners(e){e.addEventListener("click",(()=>{this.open()})),this._handleEscClose(),this._form.querySelector(".form__close-button").addEventListener("click",(e=>{e.preventDefault(),this.close()}))}}class E extends g{constructor(e){super(e)}open(e,t){super.open(),this._photo=document.querySelector(".popup__photo").src=e,this._caption=document.querySelector(".popup__photo-caption").textContent=t}test(){console.log("desde test de popimage")}}class b extends g{constructor({formSubmitHandler:e},t){super(t),this._formSubmitHandler=e,this._form=this._popup.querySelector(".form")}close(){super.close(),"place"==this._form.id&&this._form.reset(),this._popup.querySelector(".overlay").addEventListener("click",(e=>{this._popup.classList.remove("popup_opened"),e.stopImmediatePropagation()}))}getInputValues(){this._inputList=this._form.querySelectorAll(".form__input");const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(e){this.getInputValues(),super.setEventListeners(e),this._form.addEventListener("submit",(e=>{e.preventDefault(),e.stopImmediatePropagation(),this._formSubmitHandler(this.getInputValues()),this.close(),document.forms.place.reset()}))}}class v{constructor({data:e}){this._userName=e.name,this._userAboutMe=e["about-me"]}getUserInfo(){this._userName=o.textContent,this._userAboutMe=r.textContent}setUserInfo(){o.textContent=this._userName,r.textContent=this._userAboutMe}}new S({formSelector:"profile",inputSelector:".form__input",submitButtonSelector:".form__submit-button",inactiveButtonClass:"form__submit-button_inactive",inputErrorClass:"form__input_type_error",errorClass:"form__input-error_active"}).enableValidation(),new S({formSelector:"place",inputSelector:".form__input",submitButtonSelector:".form__submit-button",inactiveButtonClass:"form__submit-button_inactive",inputErrorClass:"form__input_type_error",errorClass:"form__input-error_active"}).enableValidation();const k=new p({items:[{placeName:"Valle de Yosemite",link:"https://practicum-content.s3.us-west-1.amazonaws.com/new-markets/WEB_sprint_5/ES/yosemite.jpg"},{placeName:"Lago Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/new-markets/WEB_sprint_5/ES/lake-louise.jpg"},{placeName:"MontaÃ±as Calvas",link:"https://practicum-content.s3.us-west-1.amazonaws.com/new-markets/WEB_sprint_5/ES/bald-mountains.jpg"},{placeName:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/new-markets/WEB_sprint_5/ES/latemar.jpg"},{placeName:"Parque Nacional de la Vanoise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/new-markets/WEB_sprint_5/ES/vanoise.jpg"},{placeName:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/new-markets/WEB_sprint_5/ES/lago.jpg"}],renderer:e=>{const t=new y({data:e,photoHandler:(e,t)=>{new E(i).open(e,t)}},"#card-template").generateCard();k.addItem(t)}},f);k.renderItems(),new b({formSubmitHandler:e=>{const t=new v({data:e});t.setUserInfo(),t.getUserInfo()}},t).setEventListeners(e),new b({formSubmitHandler:e=>{const t=e,o=[];o.push(t),a.classList.add("form__submit-button_inactive");const r=new p({items:o,renderer:e=>{const t=new y({data:e,photoHandler:(e,t)=>{new E(i).open(e,t)}},"#card-template").generateCard();r.addItem(t)}},f);r.renderItems()}},n).setEventListeners(s,".form__submit-button_place"),fetch("https://around.nomoreparties.co/v1/web_es_07/users/me ",{headers:{authorization:"d73ff8a4-5ad7-42cb-999c-d084ca2e6847"}}).then((e=>e.ok?e.json():Promise.reject(e.status))).then((e=>{console.log(e),console.log("todo ok")})).catch((e=>{console.log(`Error: ${e}`)})),console.log("working test2")}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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SixhQUF2QixHQUdKNUgsR0FFb0N5RyxrQkFBa0I1RyxHQUdqQyxJQUFJa0gsRUFDekIsQ0FDRUMsa0JBQW9CckMsSUFDbEIsTUFBTXNELEVBQVV0RCxFQUVWdUQsRUFBZ0IsR0FFdEJBLEVBQWNDLEtBQUtGLEdBQ25CNUgsRUFBa0JpRCxVQUFVSSxJQUFJLGdDQUNoQyxNQUFNMEUsRUFBZSxJQUFJMUgsRUFDdkIsQ0FDRUUsTUFBT3NILEVBQ1BySCxTQUFXOEQsSUFDVCxNQVVNb0QsRUFWWSxJQUFJckQsRUFDcEIsQ0FDRUMsS0FBTUEsRUFDTkMsYUFBYyxDQUFDYSxFQUFLNUMsS0FDSixJQUFJOEQsRUFBZXJHLEdBQ1Y4RixLQUFLWCxFQUFLNUMsRUFBakMsR0FHSixrQkFFd0IwQyxlQUMxQjZDLEVBQWFqSCxRQUFRNEcsRUFBckIsR0FHSnRELEdBRUYyRCxFQUFhOUcsYUFBYixHQUdKbEIsR0FFYXFHLGtCQUFrQnRHLEVBQWdCLDhCQUdqRGtJLE1BQU0seURBQTBELENBQzlEQyxRQUFTLENBQ1BDLGNBQWUsMENBR2hCQyxNQUFNQyxHQUNEQSxFQUFJQyxHQUNDRCxFQUFJRSxPQUVOQyxRQUFRQyxPQUFPSixFQUFJSyxVQUUzQk4sTUFBTUMsSUFDTGhILFFBQVFDLElBQUkrRyxHQUNaaEgsUUFBUUMsSUFBSSxVQUFaLElBRURxSCxPQUFPQyxJQUNOdkgsUUFBUUMsSUFBSyxVQUFTc0gsSUFBdEIsSUFRSnZILFFBQVFDLElBQUksZ0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80X2VzcC8uL3NyYy9zY3JpcHQvdXRpbHMvRGF0YS5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80X2VzcC8uL3NyYy9zY3JpcHQvY29tcG9uZW50cy9TZWN0aW9uLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzRfZXNwLy4vc3JjL3NjcmlwdC9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNF9lc3AvLi9zcmMvc2NyaXB0L2NvbXBvbmVudHMvQ2FyZC5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80X2VzcC8uL3NyYy9zY3JpcHQvY29tcG9uZW50cy9Qb3B1cC5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80X2VzcC8uL3NyYy9zY3JpcHQvY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80X2VzcC8uL3NyYy9zY3JpcHQvY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzRfZXNwLy4vc3JjL3NjcmlwdC9jb21wb25lbnRzL1VzZXJJbmZvLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzRfZXNwLy4vc3JjL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBpbml0aWFsQ2FyZHMgPSBbXHJcbiAge1xyXG4gICAgcGxhY2VOYW1lOiBcIlZhbGxlIGRlIFlvc2VtaXRlXCIsXHJcbiAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vbmV3LW1hcmtldHMvV0VCX3NwcmludF81L0VTL3lvc2VtaXRlLmpwZ1wiLFxyXG4gIH0sXHJcbiAge1xyXG4gICAgcGxhY2VOYW1lOiBcIkxhZ28gTG91aXNlXCIsXHJcbiAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vbmV3LW1hcmtldHMvV0VCX3NwcmludF81L0VTL2xha2UtbG91aXNlLmpwZ1wiLFxyXG4gIH0sXHJcbiAge1xyXG4gICAgcGxhY2VOYW1lOiBcIk1vbnRhw7FhcyBDYWx2YXNcIixcclxuICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9uZXctbWFya2V0cy9XRUJfc3ByaW50XzUvRVMvYmFsZC1tb3VudGFpbnMuanBnXCIsXHJcbiAgfSxcclxuICB7XHJcbiAgICBwbGFjZU5hbWU6IFwiTGF0ZW1hclwiLFxyXG4gICAgbGluazogXCJodHRwczovL3ByYWN0aWN1bS1jb250ZW50LnMzLnVzLXdlc3QtMS5hbWF6b25hd3MuY29tL25ldy1tYXJrZXRzL1dFQl9zcHJpbnRfNS9FUy9sYXRlbWFyLmpwZ1wiLFxyXG4gIH0sXHJcbiAge1xyXG4gICAgcGxhY2VOYW1lOiBcIlBhcnF1ZSBOYWNpb25hbCBkZSBsYSBWYW5vaXNlXCIsXHJcbiAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vbmV3LW1hcmtldHMvV0VCX3NwcmludF81L0VTL3Zhbm9pc2UuanBnXCIsXHJcbiAgfSxcclxuICB7XHJcbiAgICBwbGFjZU5hbWU6IFwiTGFnbyBkaSBCcmFpZXNcIixcclxuICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9uZXctbWFya2V0cy9XRUJfc3ByaW50XzUvRVMvbGFnby5qcGdcIixcclxuICB9LFxyXG5dO1xyXG4vL2NvbnN0YW50ZXMgdW5pdmVyc2FsZXNcclxuZXhwb3J0IGNvbnN0IGJ0bkVkaXRQcm9maWxlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5lZGl0LWJ1dHRvblwiKTtcclxuZXhwb3J0IGNvbnN0IGJ0bkNyZWF0ZVByb2ZpbGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmZvcm1fX3N1Ym1pdC1idXR0b25cIik7XHJcbmV4cG9ydCBjb25zdCBidG5DbG9zZUVkaXRQcm9maWxlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcclxuICBcIi5mb3JtX19jbG9zZS1idXR0b25cIlxyXG4pO1xyXG5leHBvcnQgY29uc3QgcG9wdXBFZGl0UHJvZmlsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgXCIucG9wdXBfdHlwZV9lZGl0LXByb2ZpbGVcIlxyXG4pO1xyXG5leHBvcnQgY29uc3QgdXNlck5hbWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX3VzZXItbmFtZVwiKTtcclxuZXhwb3J0IGNvbnN0IHVzZXJBYm91dE1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX191c2VyLXByb2Zlc3Npb25cIik7XHJcbmV4cG9ydCBjb25zdCB1c2VyQXZhdGFyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19hdmF0YXJcIik7XHJcbmV4cG9ydCBjb25zdCB1c2VyTmFtZUlucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNuYW1lLWlucHV0XCIpO1xyXG5leHBvcnQgY29uc3QgdXNlclByb2Zlc3Npb25JbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjYWJvdXQtbWUtaW5wdXRcIik7XHJcbmV4cG9ydCBjb25zdCBidG5BZGROZXdQbGFjZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuYWRkLWJ1dHRvblwiKTtcclxuZXhwb3J0IGNvbnN0IGJ0bkNsb3NlTmV3UGxhY2UgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gIFwiLmZvcm1fX2Nsb3NlLWJ1dHRvbl90eXBlX25ldy1wbGFjZVwiXHJcbik7XHJcbmV4cG9ydCBjb25zdCBwb3B1cEFkZE5ld1BsYWNlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF90eXBlX25ldy1wbGFjZVwiKTtcclxuZXhwb3J0IGNvbnN0IGJ0blN1Ym1pdE5ld1BsYWNlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcclxuICBcIi5mb3JtX19zdWJtaXQtYnV0dG9uX3BsYWNlXCJcclxuKTtcclxuXHJcbmV4cG9ydCBjb25zdCBjYXJkc0NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZC1jb250YWluZXJcIik7XHJcbmV4cG9ydCBjb25zdCBwb3B1cFBob3RvID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF90eXBlX3Bob3RvXCIpO1xyXG5cclxuLy9wb3B1cCBwaG90b1xyXG5leHBvcnQgY29uc3QgbGlua1BvcHVwID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fcGhvdG9cIik7XHJcbmV4cG9ydCBjb25zdCBjYXB0aW9uUG9wdXAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19waG90by1jYXB0aW9uXCIpO1xyXG5leHBvcnQgY29uc3QgYnRuQ2xvc2VQaG90byA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2Nsb3NlLWJ1dHRvblwiKTtcclxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2VjdGlvbiB7XHJcbiAgY29uc3RydWN0b3IoeyBpdGVtcywgcmVuZGVyZXIgfSwgY29udGFpbmVyU2VsZWN0b3IpIHtcclxuICAgIHRoaXMuX2l0ZW1zQXJyYXkgPSBpdGVtcztcclxuICAgIHRoaXMuX3JlbmRlcmVyID0gcmVuZGVyZXI7XHJcbiAgICB0aGlzLl9jb250YWluZXIgPSBjb250YWluZXJTZWxlY3RvcjtcclxuICB9XHJcbiAgYWRkSXRlbShpdGVtKSB7XHJcbiAgICB0aGlzLl9jb250YWluZXIuYXBwZW5kKGl0ZW0pO1xyXG4gIH1cclxuICByZW5kZXJJdGVtcygpIHtcclxuICAgIHRoaXMuX2l0ZW1zQXJyYXkuZm9yRWFjaCgoaXRlbSkgPT4ge1xyXG4gICAgICB0aGlzLl9yZW5kZXJlcihpdGVtKTtcclxuICAgIH0pO1xyXG4gIH1cclxuICB0ZXN0KCkge1xyXG4gICAgY29uc29sZS5sb2codGhpcy5faXRlbXNBcnJheSk7XHJcbiAgfVxyXG59XHJcbiIsImNvbnN0IHJlZ0V4ID0ge1xyXG4gIG5hbWU6IC9eW0EtWmEtelxcLV17MiwxMDB9JC8sXHJcbiAgYWJvdXRNZTogL15bQS1aYS16XFwtXXsyLDIwfSQvLFxyXG4gIHBsYWNlTmFtZTogL15bQS1aYS16XFwtXXs0LDIwfSQvLFxyXG4gIGxpbms6IC9eW0EtWmEtelxcLV17NCw1MDB9JC8sXHJcbn07XHJcblxyXG5leHBvcnQgY2xhc3MgRm9ybVZhbGlkYXRvciB7XHJcbiAgY29uc3RydWN0b3Iob2JqVG9WYWxpZGF0ZSkge1xyXG4gICAgdGhpcy5fZm9ybVNlbGVjdG9yID0gb2JqVG9WYWxpZGF0ZS5mb3JtU2VsZWN0b3I7XHJcbiAgICB0aGlzLl9pbnB1dFNlbGVjdG9yID0gb2JqVG9WYWxpZGF0ZS5pbnB1dFNlbGVjdG9yO1xyXG4gICAgdGhpcy5fc3VibWl0QnV0dG9uU2VsZWN0b3IgPSBvYmpUb1ZhbGlkYXRlLnN1Ym1pdEJ1dHRvblNlbGVjdG9yO1xyXG4gICAgdGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyA9IG9ialRvVmFsaWRhdGUuaW5hY3RpdmVCdXR0b25DbGFzcztcclxuICAgIHRoaXMuX2lucHV0RXJyb3JDbGFzcyA9IG9ialRvVmFsaWRhdGUuaW5wdXRFcnJvckNsYXNzO1xyXG4gICAgdGhpcy5fZXJyb3JDbGFzcyA9IG9ialRvVmFsaWRhdGUuZXJyb3JDbGFzcztcclxuICB9XHJcbiAgLy90ZXJtaW5hIGVsIGNvbnN0cnVjdG9yXHJcbiAgc3dpdGNoaW5nSW5wdXQoZXZ0KSB7XHJcbiAgICBzd2l0Y2ggKGV2dC50YXJnZXQubmFtZSkge1xyXG4gICAgICBjYXNlIFwibmFtZVwiOlxyXG4gICAgICAgIHRoaXMuX2NoZWNrSW5wdXRWYWxpZGl0eShyZWdFeC5uYW1lLCBldnQudGFyZ2V0LCB0aGlzLl9mb3JtU2VsZWN0b3IpO1xyXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKGVycm9yRWxlbWVudCk7XHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICAgIGNhc2UgXCIgYWJvdXRNZVwiOlxyXG4gICAgICAgIHRoaXMuX2NoZWNrSW5wdXRWYWxpZGl0eShyZWdFeC5hYm91dE1lLCBldnQudGFyZ2V0LCB0aGlzLl9mb3JtU2VsZWN0b3IpO1xyXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKGVycm9yRWxlbWVudCk7XHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICAgIGNhc2UgXCJwbGFjZU5hbWVcIjpcclxuICAgICAgICB0aGlzLl9jaGVja0lucHV0VmFsaWRpdHkoXHJcbiAgICAgICAgICByZWdFeC5wbGFjZU5hbWUsXHJcbiAgICAgICAgICBldnQudGFyZ2V0LFxyXG4gICAgICAgICAgdGhpcy5fZm9ybVNlbGVjdG9yXHJcbiAgICAgICAgKTtcclxuICAgICAgICAvL2NvbnNvbGUubG9nKGVycm9yRWxlbWVudCk7XHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICAgIGNhc2UgXCJsaW5rXCI6XHJcbiAgICAgICAgdGhpcy5fY2hlY2tJbnB1dFZhbGlkaXR5KHJlZ0V4LmxpbmssIGV2dC50YXJnZXQsIHRoaXMuX2Zvcm1TZWxlY3Rvcik7XHJcblxyXG4gICAgICAgIGJyZWFrO1xyXG4gICAgfVxyXG4gIH1cclxuICBfY2hlY2tJbnB1dFZhbGlkaXR5KGV4cHJlc2lvbiwgaW5wdXRFbGVtZW50LCBmb3JtSUQpIHtcclxuICAgIGNvbnN0IGZvcm1FbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoZm9ybUlEKTtcclxuICAgIGNvbnN0IGVycm9yRWxlbWVudCA9IGZvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoYC4ke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgKTtcclxuXHJcbiAgICBpZiAoZXhwcmVzaW9uLnRlc3QoaW5wdXRFbGVtZW50LnZhbHVlKSkge1xyXG4gICAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9lcnJvckNsYXNzKTtcclxuXHJcbiAgICAgIGVycm9yRWxlbWVudC50ZXh0Q29udGVudCA9IFwiXCI7XHJcbiAgICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2lucHV0RXJyb3JDbGFzcyk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSBpbnB1dEVsZW1lbnQudmFsaWRhdGlvbk1lc3NhZ2U7XHJcbiAgICAgIGVycm9yRWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2Vycm9yQ2xhc3MpO1xyXG4gICAgICBpbnB1dEVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9pbnB1dEVycm9yQ2xhc3MpO1xyXG4gICAgfVxyXG4gIH1cclxuICAvLyB0ZXJtaW5hIGNoZWNrIHNob3cgZXJyb3JcclxuICAvLyBpcyB2YWxpZFxyXG5cclxuICBpc1ZhbGlkKGZvcm1JRCkge1xyXG4gICAgbGV0IHZhbGlkID0gXCJcIjtcclxuICAgIGNvbnN0IGZvcm1FbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoZm9ybUlEKTtcclxuICAgIGNvbnN0IGlucHV0c0xpc3QgPSBBcnJheS5mcm9tKFxyXG4gICAgICBmb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKHRoaXMuX2lucHV0U2VsZWN0b3IpXHJcbiAgICApO1xyXG5cclxuICAgIGlmIChcclxuICAgICAgaW5wdXRzTGlzdC5ldmVyeSgoaW5wdXRFbGVtZW50KSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIGlucHV0RWxlbWVudC52YWxpZGl0eS52YWxpZDtcclxuICAgICAgfSlcclxuICAgICkge1xyXG4gICAgICB2YWxpZCA9IHRydWU7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB2YWxpZCA9IGZhbHNlO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHZhbGlkO1xyXG4gIH1cclxuXHJcbiAgLy8gdG9nZ2xlQnRuXHJcbiAgdG9nZ2xlQnRuU3RhdGUoZm9ybUlEKSB7XHJcbiAgICBjb25zdCBmb3JtRWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGZvcm1JRCk7XHJcbiAgICBjb25zdCBidG5FbGVtZW50ID0gZm9ybUVsZW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLl9zdWJtaXRCdXR0b25TZWxlY3Rvcik7XHJcblxyXG4gICAgaWYgKHRoaXMuaXNWYWxpZChmb3JtSUQpID09PSB0cnVlKSB7XHJcbiAgICAgIGJ0bkVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGJ0bkVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8vcHJ1ZWJhIGVuYWJsZSB2YWxpZGF0aW9uXHJcbiAgZW5hYmxlVmFsaWRhdGlvbigpIHtcclxuICAgIGNvbnN0IGZvcm1FbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQodGhpcy5fZm9ybVNlbGVjdG9yKTtcclxuXHJcbiAgICBjb25zdCBpbnB1dHNMaXN0ID0gQXJyYXkuZnJvbShcclxuICAgICAgZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvckFsbCh0aGlzLl9pbnB1dFNlbGVjdG9yKVxyXG4gICAgKTtcclxuICAgIHRoaXMudG9nZ2xlQnRuU3RhdGUodGhpcy5fZm9ybVNlbGVjdG9yKTtcclxuICAgIGlucHV0c0xpc3QuZm9yRWFjaCgoaW5wdXQpID0+IHtcclxuICAgICAgaW5wdXQuYWRkRXZlbnRMaXN0ZW5lcihcImlucHV0XCIsIChldnQpID0+IHtcclxuICAgICAgICB0aGlzLnN3aXRjaGluZ0lucHV0KGV2dCk7XHJcbiAgICAgICAgdGhpcy50b2dnbGVCdG5TdGF0ZSh0aGlzLl9mb3JtU2VsZWN0b3IpO1xyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgdGVzdCgpIHtcclxuICAgIGNvbnN0IGZvcm1FbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQodGhpcy5fZm9ybVNlbGVjdG9yKTtcclxuXHJcbiAgICBjb25zdCBlcnJvckVsZW1lbnQgPSBmb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKGAuJHtldnQudGFyZ2V0LmlkfS1lcnJvcmApO1xyXG4gICAgY29uc29sZS5sb2coZXJyb3JFbGVtZW50KTtcclxuICB9XHJcbn1cclxuLy90ZXJtaW5hIG9iamV0b1xyXG4vLyAgcHJ1ZWJhIFBhcmEgUHJvZmlsZSBmb3JtXHJcblxyXG4vL1Byb3llY3RvIDhcclxuIiwiaW1wb3J0IHtcclxuICBwb3B1cFBob3RvLFxyXG4gIGxpbmtQb3B1cCxcclxuICBjYXB0aW9uUG9wdXAsXHJcbiAgYnRuQ2xvc2VQaG90byxcclxufSBmcm9tIFwiLi4vdXRpbHMvRGF0YS5qc1wiO1xyXG5pbXBvcnQgUG9wdXBXaXRoSW1hZ2UgZnJvbSBcIi4vUG9wdXBXaXRoSW1hZ2UuanNcIjtcclxuXHJcbmV4cG9ydCBjb25zdCBjYXJkc0NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZC1jb250YWluZXJcIik7XHJcblxyXG5leHBvcnQgY2xhc3MgQ2FyZCB7XHJcbiAgY29uc3RydWN0b3IoeyBkYXRhLCBwaG90b0hhbmRsZXIgfSwgdGVtcGxhdGVTZWxlY3Rvcikge1xyXG4gICAgdGhpcy5fbmFtZSA9IGRhdGEucGxhY2VOYW1lO1xyXG4gICAgdGhpcy5fbGluayA9IGRhdGEubGluaztcclxuICAgIHRoaXMuX3RlbXBsYXRlU2VsZWN0b3IgPSB0ZW1wbGF0ZVNlbGVjdG9yO1xyXG4gICAgdGhpcy5fcGhvdG9IYW5kbGVyID0gcGhvdG9IYW5kbGVyO1xyXG4gIH1cclxuICBnZXRUZW1wbGF0ZSgpIHtcclxuICAgIGNvbnN0IGNhcmRUZW1wbGF0ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5fdGVtcGxhdGVTZWxlY3RvcikuY29udGVudDtcclxuICAgIGNvbnN0IGNhcmRFbGVtZW50ID0gY2FyZFRlbXBsYXRlXHJcbiAgICAgIC5xdWVyeVNlbGVjdG9yKFwiLnBsYWNlLWNhcmRcIilcclxuICAgICAgLmNsb25lTm9kZSh0cnVlKTtcclxuICAgIHJldHVybiBjYXJkRWxlbWVudDtcclxuICB9XHJcbiAgZ2VuZXJhdGVDYXJkKCkge1xyXG4gICAgdGhpcy5fY2FyZEVsZW1lbnQgPSB0aGlzLmdldFRlbXBsYXRlKCk7XHJcbiAgICB0aGlzLl9jYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLnBsYWNlLWNhcmRfX25hbWVcIikudGV4dENvbnRlbnQgPVxyXG4gICAgICB0aGlzLl9uYW1lO1xyXG4gICAgdGhpcy5fY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5wbGFjZS1jYXJkX19waG90b1wiKS5zcmMgPSB0aGlzLl9saW5rO1xyXG4gICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbiAgICBjb25zdCB0cmFzaEJ0biA9IHRoaXMuX2NhcmRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIudHJhc2gtYnV0dG9uXCIpO1xyXG4gICAgdHJhc2hCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgICAgY29uc3QgY2FyZFRvUmVtb3ZlID0gdHJhc2hCdG4uY2xvc2VzdChcIi5wbGFjZS1jYXJkXCIpO1xyXG4gICAgICBjYXJkVG9SZW1vdmUucmVtb3ZlKCk7XHJcbiAgICB9KTtcclxuICAgIGNvbnN0IGxpa2VJY29uID0gdGhpcy5fY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5saWtlLWJ1dHRvblwiKTtcclxuICAgIGxpa2VJY29uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmdW5jdGlvbiAoZXZ0KSB7XHJcbiAgICAgIGV2dC50YXJnZXQuY2xhc3NMaXN0LnRvZ2dsZShcImxpa2UtYnV0dG9uX2FjdGl2ZVwiKTtcclxuICAgIH0pO1xyXG5cclxuICAgIHJldHVybiB0aGlzLl9jYXJkRWxlbWVudDtcclxuICB9XHJcblxyXG4gIF9oYW5kbGVPcGVuUG9wdXAoKSB7XHJcbiAgICB0aGlzLl9waG90b0hhbmRsZXIodGhpcy5fbGluaywgdGhpcy5fbmFtZSk7XHJcbiAgfVxyXG5cclxuICBfaGFuZGxlQ2xvc2VQb3B1cCgpIHtcclxuICAgIGxpbmtQb3B1cC5zcmMgPSBcIiBcIjtcclxuICAgIGNhcHRpb25Qb3B1cC50ZXh0Q29udGVudCA9IFwiIFwiO1xyXG4gICAgcG9wdXBQaG90by5jbGFzc0xpc3QucmVtb3ZlKFwicG9wdXBfb3BlbmVkXCIpO1xyXG4gIH1cclxuXHJcbiAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgdGhpcy5fY2FyZEVsZW1lbnRcclxuICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIucGxhY2UtY2FyZF9fcGhvdG9cIilcclxuICAgICAgLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICAgICAgdGhpcy5faGFuZGxlT3BlblBvcHVwKCk7XHJcbiAgICAgIH0pO1xyXG4gICAgYnRuQ2xvc2VQaG90by5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gICAgICB0aGlzLl9oYW5kbGVDbG9zZVBvcHVwKCk7XHJcbiAgICB9KTtcclxuICB9XHJcbiAgdGVzdCgpIHtcclxuICAgIHRoaXMuZ2VuZXJhdGVDYXJkKCk7XHJcbiAgfVxyXG59XHJcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwIHtcclxuICBjb25zdHJ1Y3Rvcihwb3B1cCkge1xyXG4gICAgdGhpcy5fcG9wdXAgPSBwb3B1cDtcclxuICAgIHRoaXMuX2Zvcm0gPSBwb3B1cC5xdWVyeVNlbGVjdG9yKFwiLmZvcm1cIik7XHJcbiAgfVxyXG4gIG9wZW4oKSB7XHJcbiAgICB0aGlzLl9wb3B1cC5jbGFzc0xpc3QuYWRkKFwicG9wdXBfb3BlbmVkXCIpO1xyXG4gIH1cclxuICBjbG9zZSgpIHtcclxuICAgIHRoaXMuX3BvcHVwLmNsYXNzTGlzdC5yZW1vdmUoXCJwb3B1cF9vcGVuZWRcIik7XHJcbiAgfVxyXG4gIF9oYW5kbGVFc2NDbG9zZSgpIHtcclxuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIChldnQpID0+IHtcclxuICAgICAgZXZ0LnByZXZlbnREZWZhdWx0O1xyXG4gICAgICBpZiAoZXZ0LmtleSA9PT0gXCJFc2NhcGVcIikge1xyXG4gICAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfVxyXG4gIHNldEV2ZW50TGlzdGVuZXJzKG9wZW5CdXR0b24pIHtcclxuICAgIG9wZW5CdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgICAgdGhpcy5vcGVuKCk7XHJcbiAgICB9KTtcclxuICAgIHRoaXMuX2hhbmRsZUVzY0Nsb3NlKCk7XHJcbiAgICB0aGlzLl9mb3JtXHJcbiAgICAgIC5xdWVyeVNlbGVjdG9yKFwiLmZvcm1fX2Nsb3NlLWJ1dHRvblwiKVxyXG4gICAgICAuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChldnQpID0+IHtcclxuICAgICAgICBldnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICB0aGlzLmNsb3NlKCk7XHJcbiAgICAgIH0pO1xyXG4gIH1cclxufVxyXG4iLCIvLyBwb3B1cCB3aXRoIGltYWdlXHJcbmltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhJbWFnZSBleHRlbmRzIFBvcHVwIHtcclxuICBjb25zdHJ1Y3Rvcihwb3B1cCkge1xyXG4gICAgc3VwZXIocG9wdXApO1xyXG4gIH1cclxuICBvcGVuKHNyYywgbmFtZSkge1xyXG4gICAgc3VwZXIub3BlbigpO1xyXG4gICAgdGhpcy5fcGhvdG8gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19waG90b1wiKS5zcmMgPSBzcmM7XHJcblxyXG4gICAgdGhpcy5fY2FwdGlvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgICAgIFwiLnBvcHVwX19waG90by1jYXB0aW9uXCJcclxuICAgICkudGV4dENvbnRlbnQgPSBuYW1lO1xyXG4gIH1cclxuICB0ZXN0KCkge1xyXG4gICAgY29uc29sZS5sb2coXCJkZXNkZSB0ZXN0IGRlIHBvcGltYWdlXCIpO1xyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXAuanNcIjtcclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoRm9ybSBleHRlbmRzIFBvcHVwIHtcclxuICBjb25zdHJ1Y3Rvcih7IGZvcm1TdWJtaXRIYW5kbGVyIH0sIHBvcHVwKSB7XHJcbiAgICBzdXBlcihwb3B1cCk7XHJcbiAgICB0aGlzLl9mb3JtU3VibWl0SGFuZGxlciA9IGZvcm1TdWJtaXRIYW5kbGVyO1xyXG4gICAgdGhpcy5fZm9ybSA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoXCIuZm9ybVwiKTtcclxuICB9XHJcblxyXG4gIGNsb3NlKCkge1xyXG4gICAgc3VwZXIuY2xvc2UoKTtcclxuICAgIGlmICh0aGlzLl9mb3JtLmlkID09IFwicGxhY2VcIikge1xyXG4gICAgICB0aGlzLl9mb3JtLnJlc2V0KCk7XHJcbiAgICB9XHJcbiAgICB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKFwiLm92ZXJsYXlcIikuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChldnQpID0+IHtcclxuICAgICAgdGhpcy5fcG9wdXAuY2xhc3NMaXN0LnJlbW92ZShcInBvcHVwX29wZW5lZFwiKTtcclxuICAgICAgZXZ0LnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG4gIGdldElucHV0VmFsdWVzKCkge1xyXG4gICAgdGhpcy5faW5wdXRMaXN0ID0gdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yQWxsKFwiLmZvcm1fX2lucHV0XCIpO1xyXG4gICAgY29uc3QgZm9ybVZhbHVlcyA9IHt9O1xyXG4gICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGlucHV0KSA9PiB7XHJcbiAgICAgIGZvcm1WYWx1ZXNbaW5wdXQubmFtZV0gPSBpbnB1dC52YWx1ZTtcclxuICAgIH0pO1xyXG4gICAgcmV0dXJuIGZvcm1WYWx1ZXM7XHJcbiAgfVxyXG5cclxuICBzZXRFdmVudExpc3RlbmVycyhvcGVuQnV0dG9uKSB7XHJcbiAgICB0aGlzLmdldElucHV0VmFsdWVzKCk7XHJcbiAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycyhvcGVuQnV0dG9uKTtcclxuXHJcbiAgICB0aGlzLl9mb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGV2dCkgPT4ge1xyXG4gICAgICBldnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgZXZ0LnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpO1xyXG4gICAgICB0aGlzLl9mb3JtU3VibWl0SGFuZGxlcih0aGlzLmdldElucHV0VmFsdWVzKCkpO1xyXG4gICAgICB0aGlzLmNsb3NlKCk7XHJcbiAgICAgIGRvY3VtZW50LmZvcm1zLnBsYWNlLnJlc2V0KCk7XHJcbiAgICB9KTtcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IHsgdXNlck5hbWUsIHVzZXJBYm91dE1lIH0gZnJvbSBcIi4uL3V0aWxzL0RhdGEuanNcIjtcclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgdXNlckluZm8ge1xyXG4gIGNvbnN0cnVjdG9yKHsgZGF0YSB9KSB7XHJcbiAgICB0aGlzLl91c2VyTmFtZSA9IGRhdGEubmFtZTtcclxuICAgIHRoaXMuX3VzZXJBYm91dE1lID0gZGF0YVtcImFib3V0LW1lXCJdO1xyXG4gIH1cclxuICBnZXRVc2VySW5mbygpIHtcclxuICAgIHRoaXMuX3VzZXJOYW1lID0gdXNlck5hbWUudGV4dENvbnRlbnQ7XHJcbiAgICB0aGlzLl91c2VyQWJvdXRNZSA9IHVzZXJBYm91dE1lLnRleHRDb250ZW50O1xyXG4gIH1cclxuXHJcbiAgc2V0VXNlckluZm8oKSB7XHJcbiAgICB1c2VyTmFtZS50ZXh0Q29udGVudCA9IHRoaXMuX3VzZXJOYW1lO1xyXG4gICAgdXNlckFib3V0TWUudGV4dENvbnRlbnQgPSB0aGlzLl91c2VyQWJvdXRNZTtcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IFwiLi9zdHlsZXMvaW5kZXguY3NzXCI7XHJcbmltcG9ydCB7XHJcbiAgYnRuRWRpdFByb2ZpbGUsXHJcbiAgcG9wdXBFZGl0UHJvZmlsZSxcclxuICBpbml0aWFsQ2FyZHMsXHJcbiAgcG9wdXBQaG90byxcclxuICBwb3B1cEFkZE5ld1BsYWNlLFxyXG4gIGJ0bkFkZE5ld1BsYWNlLFxyXG4gIGJ0blN1Ym1pdE5ld1BsYWNlLFxyXG4gIHVzZXJBdmF0YXIsXHJcbiAgdXNlck5hbWUsXHJcbiAgdXNlckFib3V0TWUsXHJcbn0gZnJvbSBcIi4vc2NyaXB0L3V0aWxzL0RhdGEuanNcIjtcclxuaW1wb3J0IFNlY3Rpb24gZnJvbSBcIi4vc2NyaXB0L2NvbXBvbmVudHMvU2VjdGlvbi5qc1wiO1xyXG5cclxuaW1wb3J0IHsgRm9ybVZhbGlkYXRvciB9IGZyb20gXCIuL3NjcmlwdC9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanNcIjtcclxuaW1wb3J0IHsgQ2FyZCwgY2FyZHNDb250YWluZXIgfSBmcm9tIFwiLi9zY3JpcHQvY29tcG9uZW50cy9DYXJkLmpzXCI7XHJcbmltcG9ydCBQb3B1cFdpdGhJbWFnZSBmcm9tIFwiLi9zY3JpcHQvY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qc1wiO1xyXG5pbXBvcnQgUG9wdXBXaXRoRm9ybSBmcm9tIFwiLi9zY3JpcHQvY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzXCI7XHJcbmltcG9ydCB1c2VySW5mbyBmcm9tIFwiLi9zY3JpcHQvY29tcG9uZW50cy9Vc2VySW5mby5qc1wiO1xyXG5cclxuLy8gb2JqZXRvcyBwYXJhIHZhbGlkYXJcclxuY29uc3QgdmFsaWRhdGlvbk9iamVjdCA9IHtcclxuICBmb3JtU2VsZWN0b3I6IFwicHJvZmlsZVwiLFxyXG4gIGlucHV0U2VsZWN0b3I6IFwiLmZvcm1fX2lucHV0XCIsXHJcbiAgc3VibWl0QnV0dG9uU2VsZWN0b3I6IFwiLmZvcm1fX3N1Ym1pdC1idXR0b25cIixcclxuICBpbmFjdGl2ZUJ1dHRvbkNsYXNzOiBcImZvcm1fX3N1Ym1pdC1idXR0b25faW5hY3RpdmVcIixcclxuICBpbnB1dEVycm9yQ2xhc3M6IFwiZm9ybV9faW5wdXRfdHlwZV9lcnJvclwiLFxyXG4gIGVycm9yQ2xhc3M6IFwiZm9ybV9faW5wdXQtZXJyb3JfYWN0aXZlXCIsXHJcbn07XHJcblxyXG5jb25zdCB2YWxpZGF0aW9uT2JqZWN0MiA9IHtcclxuICBmb3JtU2VsZWN0b3I6IFwicGxhY2VcIixcclxuICBpbnB1dFNlbGVjdG9yOiBcIi5mb3JtX19pbnB1dFwiLFxyXG4gIHN1Ym1pdEJ1dHRvblNlbGVjdG9yOiBcIi5mb3JtX19zdWJtaXQtYnV0dG9uXCIsXHJcbiAgaW5hY3RpdmVCdXR0b25DbGFzczogXCJmb3JtX19zdWJtaXQtYnV0dG9uX2luYWN0aXZlXCIsXHJcbiAgaW5wdXRFcnJvckNsYXNzOiBcImZvcm1fX2lucHV0X3R5cGVfZXJyb3JcIixcclxuICBlcnJvckNsYXNzOiBcImZvcm1fX2lucHV0LWVycm9yX2FjdGl2ZVwiLFxyXG59O1xyXG4vL2xsYW1hbmRvIGEgRm9ybVZhbGlkYXRvclxyXG5jb25zdCBQcm9maWxlVmFsaWRhdGlvbiA9IG5ldyBGb3JtVmFsaWRhdG9yKHZhbGlkYXRpb25PYmplY3QpO1xyXG5jb25zdCB0ZXN0ID0gUHJvZmlsZVZhbGlkYXRpb24uZW5hYmxlVmFsaWRhdGlvbigpO1xyXG4vL3BydWViYSBwYXJhIHBsYWNlIGZvcm1cclxuY29uc3QgUGxhY2VWYWxpZGF0aW9uID0gbmV3IEZvcm1WYWxpZGF0b3IodmFsaWRhdGlvbk9iamVjdDIpO1xyXG5jb25zdCB0ZXN0MiA9IFBsYWNlVmFsaWRhdGlvbi5lbmFibGVWYWxpZGF0aW9uKCk7XHJcblxyXG4vLyBQb3J5ZWN0byA5XHJcblxyXG5jb25zdCBkZWZhdWx0Q2FyZExpc3QgPSBuZXcgU2VjdGlvbihcclxuICB7XHJcbiAgICBpdGVtczogaW5pdGlhbENhcmRzLFxyXG4gICAgcmVuZGVyZXI6IChpdGVtKSA9PiB7XHJcbiAgICAgIGNvbnN0IGNhcmQgPSBuZXcgQ2FyZChcclxuICAgICAgICB7XHJcbiAgICAgICAgICBkYXRhOiBpdGVtLFxyXG4gICAgICAgICAgcGhvdG9IYW5kbGVyOiAoc3JjLCBuYW1lKSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnN0IHBob3RvID0gbmV3IFBvcHVwV2l0aEltYWdlKHBvcHVwUGhvdG8pO1xyXG4gICAgICAgICAgICBjb25zdCBuZXdQaG90byA9IHBob3RvLm9wZW4oc3JjLCBuYW1lKTtcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgfSxcclxuICAgICAgICBcIiNjYXJkLXRlbXBsYXRlXCJcclxuICAgICAgKTtcclxuICAgICAgY29uc3QgbmV3Q2FyZCA9IGNhcmQuZ2VuZXJhdGVDYXJkKCk7XHJcbiAgICAgIGRlZmF1bHRDYXJkTGlzdC5hZGRJdGVtKG5ld0NhcmQpO1xyXG4gICAgfSxcclxuICB9LFxyXG4gIGNhcmRzQ29udGFpbmVyXHJcbik7XHJcbmRlZmF1bHRDYXJkTGlzdC5yZW5kZXJJdGVtcygpO1xyXG5cclxuLy9wb3B1cCBmb3JtIHByb2ZpbGVcclxuY29uc3QgZm9ybVBvcHVwUHJvZmlsZSA9IG5ldyBQb3B1cFdpdGhGb3JtKFxyXG4gIHtcclxuICAgIGZvcm1TdWJtaXRIYW5kbGVyOiAoZGF0YSkgPT4ge1xyXG4gICAgICAvLyBhcXVpIGVtcGllemEgY2FsbGJhY2tcclxuXHJcbiAgICAgIGNvbnN0IHVzZXIgPSBuZXcgdXNlckluZm8oeyBkYXRhOiBkYXRhIH0pO1xyXG4gICAgICBjb25zdCBuZXdVc2VyID0gdXNlci5zZXRVc2VySW5mbygpO1xyXG4gICAgICBjb25zdCByZXNldFVzZXIgPSB1c2VyLmdldFVzZXJJbmZvKCk7XHJcbiAgICB9LCAvL2FxdWkgdGVybWluY2tcclxuICB9LFxyXG4gIHBvcHVwRWRpdFByb2ZpbGVcclxuKTtcclxuY29uc3QgbmV3Rm9ybVBvcHVwID0gZm9ybVBvcHVwUHJvZmlsZS5zZXRFdmVudExpc3RlbmVycyhidG5FZGl0UHJvZmlsZSk7XHJcblxyXG4vLyAgcG9wdXAgZm9ybSBwbGFjZVxyXG5jb25zdCBmb3JtUG9wdXBQbGFjZSA9IG5ldyBQb3B1cFdpdGhGb3JtKCAvLyBkZWNsYXJhbmRvIGZvcm1cclxuICB7XHJcbiAgICBmb3JtU3VibWl0SGFuZGxlcjogKGRhdGEpID0+IHtcclxuICAgICAgY29uc3QgbmV3SXRlbSA9IGRhdGE7XHJcblxyXG4gICAgICBjb25zdCBhZGRlZENhcmRMaXN0ID0gW107XHJcblxyXG4gICAgICBhZGRlZENhcmRMaXN0LnB1c2gobmV3SXRlbSk7XHJcbiAgICAgIGJ0blN1Ym1pdE5ld1BsYWNlLmNsYXNzTGlzdC5hZGQoXCJmb3JtX19zdWJtaXQtYnV0dG9uX2luYWN0aXZlXCIpO1xyXG4gICAgICBjb25zdCBpbnB1dFNlY3Rpb24gPSBuZXcgU2VjdGlvbihcclxuICAgICAgICB7XHJcbiAgICAgICAgICBpdGVtczogYWRkZWRDYXJkTGlzdCxcclxuICAgICAgICAgIHJlbmRlcmVyOiAoZGF0YSkgPT4ge1xyXG4gICAgICAgICAgICBjb25zdCBpbnB1dENhcmQgPSBuZXcgQ2FyZChcclxuICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBkYXRhOiBkYXRhLFxyXG4gICAgICAgICAgICAgICAgcGhvdG9IYW5kbGVyOiAoc3JjLCBuYW1lKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgIGNvbnN0IHBob3RvID0gbmV3IFBvcHVwV2l0aEltYWdlKHBvcHVwUGhvdG8pO1xyXG4gICAgICAgICAgICAgICAgICBjb25zdCBuZXdQaG90byA9IHBob3RvLm9wZW4oc3JjLCBuYW1lKTtcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICBcIiNjYXJkLXRlbXBsYXRlXCJcclxuICAgICAgICAgICAgKTtcclxuICAgICAgICAgICAgY29uc3QgbmV3Q2FyZCA9IGlucHV0Q2FyZC5nZW5lcmF0ZUNhcmQoKTtcclxuICAgICAgICAgICAgaW5wdXRTZWN0aW9uLmFkZEl0ZW0obmV3Q2FyZCk7XHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgY2FyZHNDb250YWluZXJcclxuICAgICAgKTtcclxuICAgICAgaW5wdXRTZWN0aW9uLnJlbmRlckl0ZW1zKCk7XHJcbiAgICB9LFxyXG4gIH0sXHJcbiAgcG9wdXBBZGROZXdQbGFjZVxyXG4pO1xyXG5mb3JtUG9wdXBQbGFjZS5zZXRFdmVudExpc3RlbmVycyhidG5BZGROZXdQbGFjZSwgXCIuZm9ybV9fc3VibWl0LWJ1dHRvbl9wbGFjZVwiKTsgLy8gc2UgYWNjaW9uYSAgcG9wdW9wIHdpdGggZm9ybVxyXG5cclxuLy9Qcm95ZWN0byAxMFxyXG5mZXRjaChcImh0dHBzOi8vYXJvdW5kLm5vbW9yZXBhcnRpZXMuY28vdjEvd2ViX2VzXzA3L3VzZXJzL21lIFwiLCB7XHJcbiAgaGVhZGVyczoge1xyXG4gICAgYXV0aG9yaXphdGlvbjogXCJkNzNmZjhhNC01YWQ3LTQyY2ItOTk5Yy1kMDg0Y2EyZTY4NDdcIixcclxuICB9LFxyXG59KVxyXG4gIC50aGVuKChyZXMpID0+IHtcclxuICAgIGlmIChyZXMub2spIHtcclxuICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QocmVzLnN0YXR1cyk7XHJcbiAgfSlcclxuICAudGhlbigocmVzKSA9PiB7XHJcbiAgICBjb25zb2xlLmxvZyhyZXMpO1xyXG4gICAgY29uc29sZS5sb2coXCJ0b2RvIG9rXCIpO1xyXG4gIH0pXHJcbiAgLmNhdGNoKChlcnJvcikgPT4ge1xyXG4gICAgY29uc29sZS5sb2coYEVycm9yOiAke2Vycm9yfWApO1xyXG4gIH0pO1xyXG4vL3JlbmRlclByb2ZpbGVcclxuZnVuY3Rpb24gcmVuZGVyUmVzdWx0cyh1c2VyRGF0YSkge1xyXG4gIHVzZXJOYW1lLnRleHRDb250ZW50ID0gdXNlckRhdGEubmFtZTtcclxuICB1c2VyQWJvdXRNZS50ZXh0Q29udGVudCA9IHVzZXJEYXRhLmFib3V0O1xyXG4gIHVzZXJBdmF0YXIuc3JjID0gdXNlckRhdGEuYXZhdGFyO1xyXG59XHJcbmNvbnNvbGUubG9nKFwid29ya2luZyB0ZXN0MlwiKTtcclxuIl0sIm5hbWVzIjpbImJ0bkVkaXRQcm9maWxlIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwicG9wdXBFZGl0UHJvZmlsZSIsInVzZXJOYW1lIiwidXNlckFib3V0TWUiLCJidG5BZGROZXdQbGFjZSIsInBvcHVwQWRkTmV3UGxhY2UiLCJidG5TdWJtaXROZXdQbGFjZSIsInBvcHVwUGhvdG8iLCJsaW5rUG9wdXAiLCJjYXB0aW9uUG9wdXAiLCJidG5DbG9zZVBob3RvIiwiU2VjdGlvbiIsImNvbnN0cnVjdG9yIiwiaXRlbXMiLCJyZW5kZXJlciIsImNvbnRhaW5lclNlbGVjdG9yIiwidGhpcyIsIl9pdGVtc0FycmF5IiwiX3JlbmRlcmVyIiwiX2NvbnRhaW5lciIsImFkZEl0ZW0iLCJpdGVtIiwiYXBwZW5kIiwicmVuZGVySXRlbXMiLCJmb3JFYWNoIiwidGVzdCIsImNvbnNvbGUiLCJsb2ciLCJyZWdFeCIsIkZvcm1WYWxpZGF0b3IiLCJvYmpUb1ZhbGlkYXRlIiwiX2Zvcm1TZWxlY3RvciIsImZvcm1TZWxlY3RvciIsIl9pbnB1dFNlbGVjdG9yIiwiaW5wdXRTZWxlY3RvciIsIl9zdWJtaXRCdXR0b25TZWxlY3RvciIsInN1Ym1pdEJ1dHRvblNlbGVjdG9yIiwiX2luYWN0aXZlQnV0dG9uQ2xhc3MiLCJpbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiX2lucHV0RXJyb3JDbGFzcyIsImlucHV0RXJyb3JDbGFzcyIsIl9lcnJvckNsYXNzIiwiZXJyb3JDbGFzcyIsInN3aXRjaGluZ0lucHV0IiwiZXZ0IiwidGFyZ2V0IiwibmFtZSIsIl9jaGVja0lucHV0VmFsaWRpdHkiLCJleHByZXNpb24iLCJpbnB1dEVsZW1lbnQiLCJmb3JtSUQiLCJlcnJvckVsZW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsImlkIiwidmFsdWUiLCJjbGFzc0xpc3QiLCJyZW1vdmUiLCJ0ZXh0Q29udGVudCIsInZhbGlkYXRpb25NZXNzYWdlIiwiYWRkIiwiaXNWYWxpZCIsInZhbGlkIiwiZm9ybUVsZW1lbnQiLCJBcnJheSIsImZyb20iLCJxdWVyeVNlbGVjdG9yQWxsIiwiZXZlcnkiLCJ2YWxpZGl0eSIsInRvZ2dsZUJ0blN0YXRlIiwiYnRuRWxlbWVudCIsImVuYWJsZVZhbGlkYXRpb24iLCJpbnB1dHNMaXN0IiwiaW5wdXQiLCJhZGRFdmVudExpc3RlbmVyIiwiY2FyZHNDb250YWluZXIiLCJDYXJkIiwiZGF0YSIsInBob3RvSGFuZGxlciIsInRlbXBsYXRlU2VsZWN0b3IiLCJfbmFtZSIsInBsYWNlTmFtZSIsIl9saW5rIiwibGluayIsIl90ZW1wbGF0ZVNlbGVjdG9yIiwiX3Bob3RvSGFuZGxlciIsImdldFRlbXBsYXRlIiwiY29udGVudCIsImNsb25lTm9kZSIsImdlbmVyYXRlQ2FyZCIsIl9jYXJkRWxlbWVudCIsInNyYyIsIl9zZXRFdmVudExpc3RlbmVycyIsInRyYXNoQnRuIiwiY2xvc2VzdCIsInRvZ2dsZSIsIl9oYW5kbGVPcGVuUG9wdXAiLCJfaGFuZGxlQ2xvc2VQb3B1cCIsIlBvcHVwIiwicG9wdXAiLCJfcG9wdXAiLCJfZm9ybSIsIm9wZW4iLCJjbG9zZSIsIl9oYW5kbGVFc2NDbG9zZSIsInByZXZlbnREZWZhdWx0Iiwia2V5Iiwic2V0RXZlbnRMaXN0ZW5lcnMiLCJvcGVuQnV0dG9uIiwiUG9wdXBXaXRoSW1hZ2UiLCJzdXBlciIsIl9waG90byIsIl9jYXB0aW9uIiwiUG9wdXBXaXRoRm9ybSIsImZvcm1TdWJtaXRIYW5kbGVyIiwiX2Zvcm1TdWJtaXRIYW5kbGVyIiwicmVzZXQiLCJzdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24iLCJnZXRJbnB1dFZhbHVlcyIsIl9pbnB1dExpc3QiLCJmb3JtVmFsdWVzIiwiZm9ybXMiLCJwbGFjZSIsInVzZXJJbmZvIiwiX3VzZXJOYW1lIiwiX3VzZXJBYm91dE1lIiwiZ2V0VXNlckluZm8iLCJzZXRVc2VySW5mbyIsImRlZmF1bHRDYXJkTGlzdCIsIm5ld0NhcmQiLCJ1c2VyIiwibmV3SXRlbSIsImFkZGVkQ2FyZExpc3QiLCJwdXNoIiwiaW5wdXRTZWN0aW9uIiwiZmV0Y2giLCJoZWFkZXJzIiwiYXV0aG9yaXphdGlvbiIsInRoZW4iLCJyZXMiLCJvayIsImpzb24iLCJQcm9taXNlIiwicmVqZWN0Iiwic3RhdHVzIiwiY2F0Y2giLCJlcnJvciJdLCJzb3VyY2VSb290IjoiIn0=