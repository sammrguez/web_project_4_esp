!function(){"use strict";const e=document.querySelector(".edit-button"),t=(document.querySelector(".form__submit-button"),document.querySelector(".form__close-button"),document.querySelector(".popup_type_edit-profile")),o=document.querySelector(".profile__user-name"),r=document.querySelector(".profile__user-profession"),s=document.querySelector(".profile__avatar"),n=(document.querySelector("#name-input"),document.querySelector("#about-me-input"),document.querySelector(".add-button")),a=(document.querySelector(".form__close-button_type_new-place"),document.querySelector(".popup_type_new-place")),i=document.querySelector(".form__submit-button_place"),c=(document.querySelector(".card-container"),document.querySelector(".popup_type_photo")),l=document.querySelector(".popup__photo"),u=document.querySelector(".popup__photo-caption"),p=document.querySelector(".popup__close-button");class m{constructor({items:e,renderer:t},o){this._itemsArray=e,this._renderer=t,this._container=o}addItem(e){this._container.append(e)}renderItems(){this._itemsArray.forEach((e=>{this._renderer(e)}))}test(){console.log(this._itemsArray)}}const _=/^[A-Za-z\-]{2,100}$/,d=/^[A-Za-z\-]{2,20}$/,h=/^[A-Za-z\-]{4,20}$/,S=/^[A-Za-z\-]{4,500}$/;class f{constructor(e){this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass}switchingInput(e){switch(e.target.name){case"name":this._checkInputValidity(_,e.target,this._formSelector);break;case" aboutMe":this._checkInputValidity(d,e.target,this._formSelector);break;case"placeName":this._checkInputValidity(h,e.target,this._formSelector);break;case"link":this._checkInputValidity(S,e.target,this._formSelector)}}_checkInputValidity(e,t,o){const r=document.getElementById(o).querySelector(`.${t.id}-error`);e.test(t.value)?(r.classList.remove(this._errorClass),r.textContent="",t.classList.remove(this._inputErrorClass)):(r.textContent=t.validationMessage,r.classList.add(this._errorClass),t.classList.add(this._inputErrorClass))}isValid(e){let t="";const o=document.getElementById(e);return t=!!Array.from(o.querySelectorAll(this._inputSelector)).every((e=>e.validity.valid)),t}toggleBtnState(e){const t=document.getElementById(e).querySelector(this._submitButtonSelector);!0===this.isValid(e)?t.classList.remove(this._inactiveButtonClass):t.classList.add(this._inactiveButtonClass)}enableValidation(){const e=document.getElementById(this._formSelector),t=Array.from(e.querySelectorAll(this._inputSelector));this.toggleBtnState(this._formSelector),t.forEach((e=>{e.addEventListener("input",(e=>{this.switchingInput(e),this.toggleBtnState(this._formSelector)}))}))}test(){const e=document.getElementById(this._formSelector).querySelector(`.${evt.target.id}-error`);console.log(e)}}const y=document.querySelector(".card-container");class E{constructor({data:e,photoHandler:t},o){this._name=e.placeName,this._link=e.link,this._templateSelector=o,this._photoHandler=t}getTemplate(){return document.querySelector(this._templateSelector).content.querySelector(".place-card").cloneNode(!0)}generateCard(){this._cardElement=this.getTemplate(),this._cardElement.querySelector(".place-card__name").textContent=this._name,this._cardElement.querySelector(".place-card__photo").src=this._link,this._setEventListeners();const e=this._cardElement.querySelector(".trash-button");return e.addEventListener("click",(()=>{e.closest(".place-card").remove()})),this._cardElement.querySelector(".like-button").addEventListener("click",(function(e){e.target.classList.toggle("like-button_active")})),this._cardElement}_handleOpenPopup(){this._photoHandler(this._link,this._name)}_handleClosePopup(){l.src=" ",u.textContent=" ",c.classList.remove("popup_opened")}_setEventListeners(){this._cardElement.querySelector(".place-card__photo").addEventListener("click",(()=>{this._handleOpenPopup()})),p.addEventListener("click",(()=>{this._handleClosePopup()}))}test(){this.generateCard()}}class v{constructor(e){this._popup=e,this._form=e.querySelector(".form")}open(){this._popup.classList.add("popup_opened")}close(){this._popup.classList.remove("popup_opened")}_handleEscClose(){document.addEventListener("keydown",(e=>{e.preventDefault,"Escape"===e.key&&this.close()}))}setEventListeners(e){e.addEventListener("click",(()=>{this.open()})),this._handleEscClose(),this._form.querySelector(".form__close-button").addEventListener("click",(e=>{e.preventDefault(),this.close()}))}}class b extends v{constructor(e){super(e)}open(e,t){super.open(),this._photo=document.querySelector(".popup__photo").src=e,this._caption=document.querySelector(".popup__photo-caption").textContent=t}test(){console.log("desde test de popimage")}}class g extends v{constructor({formSubmitHandler:e},t){super(t),this._formSubmitHandler=e,this._form=this._popup.querySelector(".form")}close(){super.close(),"place"==this._form.id&&this._form.reset(),this._popup.querySelector(".overlay").addEventListener("click",(e=>{this._popup.classList.remove("popup_opened"),e.stopImmediatePropagation()}))}getInputValues(){this._inputList=this._form.querySelectorAll(".form__input");const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(e){this.getInputValues(),super.setEventListeners(e),this._form.addEventListener("submit",(e=>{e.preventDefault(),e.stopImmediatePropagation(),this._formSubmitHandler(this.getInputValues()),this.close(),document.forms.place.reset()}))}}class k{constructor({data:e}){this._userName=e.name,this._userAboutMe=e["about-me"]}getUserInfo(){this._userName=o.textContent,this._userAboutMe=r.textContent}setUserInfo(){o.textContent=this._userName,r.textContent=this._userAboutMe}}new f({formSelector:"profile",inputSelector:".form__input",submitButtonSelector:".form__submit-button",inactiveButtonClass:"form__submit-button_inactive",inputErrorClass:"form__input_type_error",errorClass:"form__input-error_active"}).enableValidation(),new f({formSelector:"place",inputSelector:".form__input",submitButtonSelector:".form__submit-button",inactiveButtonClass:"form__submit-button_inactive",inputErrorClass:"form__input_type_error",errorClass:"form__input-error_active"}).enableValidation();const q=new m({items:[{placeName:"Valle de Yosemite",link:"https://practicum-content.s3.us-west-1.amazonaws.com/new-markets/WEB_sprint_5/ES/yosemite.jpg"},{placeName:"Lago Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/new-markets/WEB_sprint_5/ES/lake-louise.jpg"},{placeName:"MontaÃ±as Calvas",link:"https://practicum-content.s3.us-west-1.amazonaws.com/new-markets/WEB_sprint_5/ES/bald-mountains.jpg"},{placeName:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/new-markets/WEB_sprint_5/ES/latemar.jpg"},{placeName:"Parque Nacional de la Vanoise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/new-markets/WEB_sprint_5/ES/vanoise.jpg"},{placeName:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/new-markets/WEB_sprint_5/ES/lago.jpg"}],renderer:e=>{const t=new E({data:e,photoHandler:(e,t)=>{new b(c).open(e,t)}},"#card-template").generateCard();q.addItem(t)}},y);q.renderItems(),new g({formSubmitHandler:e=>{const t=new k({data:e});t.setUserInfo(),t.getUserInfo()}},t).setEventListeners(e),new g({formSubmitHandler:e=>{const t=e,o=[];o.push(t),i.classList.add("form__submit-button_inactive");const r=new m({items:o,renderer:e=>{const t=new E({data:e,photoHandler:(e,t)=>{new b(c).open(e,t)}},"#card-template").generateCard();r.addItem(t)}},y);r.renderItems()}},a).setEventListeners(n,".form__submit-button_place"),fetch("https://around.nomoreparties.co/v1/web_es_07/users/me ",{headers:{authorization:"d73ff8a4-5ad7-42cb-999c-d084ca2e6847"}}).then((e=>e.ok?e.json():Promise.reject(e.status))).then((e=>{console.log(e),console.log("todo ok")})).then((e=>{var t;t=e,o.textContent=t.name,r.textContent=t.about,s.src=t.avatar})).catch((e=>{console.log(`Error: ${e}`)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,