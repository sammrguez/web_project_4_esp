!function(){"use strict";function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},t(e)}function e(e,r){for(var n=0;n<r.length;n++){var o=r[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,r){if("object"!==t(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,"string");if("object"!==t(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===t(i)?i:String(i)),o)}var i}var r=function(){function t(e){var r=e.baseUrl,n=e.headers;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._baseUrl=r,this._headers=n,this._authorization=n.authorization}var r,n;return r=t,n=[{key:"renderResults",value:function(t){u.textContent=t.name,a.textContent=t.about,c.src=t.avatar}},{key:"defaultProfile",value:function(){var t=this;return fetch("".concat(this._baseUrl,"/users/me"),{headers:{authorization:this._authorization}}).then((function(t){return t.ok?t.json():Promise.reject(t.status)})).then((function(e){t.renderResults(e)})).catch((function(t){console.log("Error: ".concat(t))}))}},{key:"editProfile",value:function(t){return fetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:{authorization:this._authorization,"content-Type":"application/json"},body:JSON.stringify({name:t.name,about:t.about})}).then((function(t){return t.ok?t.json():Promise.reject(t.status)})).catch((function(t){console.log("Error: ".concat(t))}))}},{key:"updateAvatar",value:function(t){return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:{authorization:this._authorization,"content-Type":"application/json"},body:JSON.stringify({avatar:t.avatar})}).then((function(t){return t.ok?t.json():Promise.reject(t.status)})).catch((function(t){console.log("Error: ".concat(t))}))}},{key:"addLike",value:function(t){return fetch("".concat(this._baseUrl,"/cards/likes/").concat(t),{method:"PUT",headers:{authorization:this._authorization,"content-Type":"application/json"},body:JSON.stringify({name:profile.name,about:profile.about})}).then((function(t){return t.ok?t.json():Promise.reject(t.status)})).catch((function(t){console.log("Error: ".concat(t))}))}},{key:"deleteLike",value:function(t){return fetch("".concat(this._baseUrl,"/cards/likes/").concat(t),{method:"DELETE",headers:{authorization:this._authorization,"content-Type":"application/json"},body:JSON.stringify({name:profile.name,about:profile.about})}).then((function(t){return t.ok?t.json():Promise.reject(t.status)})).catch((function(t){console.log("Error: ".concat(t))}))}},{key:"cardsAddedRequest",value:function(){return fetch("".concat(this._baseUrl,"/cards"),{headers:{authorization:this._authorization}})}},{key:"addNewCardPetition",value:function(t){return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:{authorization:this._authorization,"content-Type":"application/json"},body:JSON.stringify({name:t.placeName,link:t.link})}).then((function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status))})).catch((function(t){console.log("Error: ".concat(t))}))}},{key:"deleteCard",value:function(t){return fetch("".concat(this._baseUrl,"/cards/").concat(t),{method:"DELETE",headers:{authorization:this._authorization,"content-Type":"application/json"}}).then((function(t){return t.ok?t.json():Promise.reject(t.status)})).catch((function(t){console.log("Error: ".concat(t))}))}},{key:"returnCardInfo",value:function(t){return fetch("".concat(this._baseUrl,"/cards/").concat(t),{method:"GET",headers:{authorization:this._authorization}}).then((function(t){return t.ok?t.json():Promise.reject(t.status)})).catch((function(t){console.log("Error: ".concat(t))}))}}],n&&e(r.prototype,n),Object.defineProperty(r,"prototype",{writable:!1}),t}(),n=new r({baseUrl:"https://around.nomoreparties.co/v1/web_es_07/",headers:{authorization:"d73ff8a4-5ad7-42cb-999c-d084ca2e6847","content-Type":"application/json"}}),o=document.querySelector(".edit-button"),i=(document.querySelector(".form__submit-button"),document.querySelector(".form__close-button"),document.querySelector(".popup_type_edit-profile")),u=document.querySelector(".profile__user-name"),a=document.querySelector(".profile__user-profession"),c=document.querySelector(".profile__avatar"),l=(document.querySelector("#name-input"),document.querySelector("#about-me-input"),document.querySelector(".add-button")),s=(document.querySelector(".form__close-button_type_new-place"),document.querySelector(".popup_type_new-place")),f=(document.querySelector(".form__submit-button_place"),document.querySelector(".card-container"),document.querySelector(".popup_type_photo")),p=document.querySelector(".popup__photo"),y=document.querySelector(".popup__photo-caption"),m=document.querySelector(".popup__close-button"),d=document.querySelector(".form__submit-button_delete"),h=document.querySelector(".popup_type_delete"),b=document.querySelector(".form__close-button_type_delete"),v=document.querySelector(".popup_type_update-avatar"),_=document.querySelector(".profile__avatar-overlay"),S=document.querySelector(".profile__avatar");function g(t){return g="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},g(t)}function E(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==g(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==g(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===g(o)?o:String(o)),n)}var o}var k=function(){function t(e,r){var n=e.items,o=e.renderer;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._itemsArray=n,this._renderer=o,this._container=r}var e,r;return e=t,(r=[{key:"addItem",value:function(t){this._container.prepend(t)}},{key:"renderItems",value:function(){var t=this;this._itemsArray.forEach((function(e){t._renderer(e)}))}}])&&E(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function w(t){return w="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},w(t)}function j(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==w(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==w(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===w(o)?o:String(o)),n)}var o}var P=/^[A-Za-z\-]{2,100}$/,O=/^[A-Za-z\-]{2,20}$/,C=/^[A-Za-z\-]{3,20}$/,q=/^https?:\/\//,L=/^https?:\/\//,T=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass}var e,r;return e=t,(r=[{key:"switchingInput",value:function(t){switch(t.target.name){case"name":this._checkInputValidity(P,t.target,this._formSelector);break;case"about-me":this._checkInputValidity(O,t.target,this._formSelector);break;case"placeName":this._checkInputValidity(C,t.target,this._formSelector);break;case"link":this._checkInputValidity(q,t.target,this._formSelector);break;case"updateAvatar":this._checkInputValidity(L,t.target,this._formSelector)}}},{key:"_checkInputValidity",value:function(t,e,r){var n=document.getElementById(r),o=n.querySelector(".".concat(e.id,"-error"));n.querySelector(this._submitButtonSelector),t.test(e.value)?(o.classList.remove(this._errorClass),e.classList.remove(this._inputErrorClass),o.textContent=""):(o.textContent=e.validationMessage,o.classList.add(this._errorClass),e.classList.add(this._inputErrorClass))}},{key:"_hasInvalidInput",value:function(t){var e=document.getElementById(t);return Array.from(e.querySelectorAll(this._inputSelector)).some((function(t){return!t.validity.valid}))}},{key:"toggleBtnState",value:function(){var t=document.getElementById(this._formSelector).querySelector(this._submitButtonSelector);this._hasInvalidInput(this._formSelector)?(t.classList.add(this._inactiveButtonClass),t.setAttribute("disabled",!0)):(t.classList.remove(this._inactiveButtonClass),t.removeAttribute("disabled",!1))}},{key:"setEventListeners",value:function(){var t=this,e=document.getElementById(this._formSelector),r=Array.from(e.querySelectorAll(this._inputSelector));e.querySelector(this._submitButtonSelector),this.toggleBtnState(),r.forEach((function(e){e.addEventListener("input",(function(e){e.stopImmediatePropagation(),t.switchingInput(e),t.toggleBtnState()}))})),this.toggleBtnState()}}])&&j(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function I(t){return I="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},I(t)}function B(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==I(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==I(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===I(o)?o:String(o)),n)}var o}var R=document.querySelector(".card-container"),z=function(){function t(e,r){var n=e.data,o=e.photoHandler,i=e.deleteHandler;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=n.name,this._link=n.link,this._id=n._id,this._likes=n.likes,this._templateSelector=r,this._photoHandler=o,this._deleteHandler=i,this._likes=n.likes}var e,r;return e=t,(r=[{key:"getTemplate",value:function(){return document.querySelector(this._templateSelector).content.querySelector(".place-card").cloneNode(!0)}},{key:"generateCard",value:function(){return this._cardElement=this.getTemplate(),this._cardElement.querySelector(".place-card__name").textContent=this._name,this._cardElement.querySelector(".place-card__photo").src=this._link,this._cardElement.querySelector(".place-card__photo").alt="imagen de ".concat(this._name),this._cardElement.id=this._id,this._cardElement.querySelector(".like-button-counter").textContent=this._likes.length,this._setEventListeners(),this._cardElement}},{key:"_handleOpenPopup",value:function(){this._photoHandler(this._link,this._name)}},{key:"_handleClosePopup",value:function(){p.src=" ",y.textContent=" ",f.classList.remove("popup_opened")}},{key:"_setEventListeners",value:function(){var t=this;this._cardElement.querySelector(".place-card__photo").addEventListener("click",(function(){t._handleOpenPopup()})),m.addEventListener("click",(function(){t._handleClosePopup()})),this._cardElement.querySelector(".trash-button").addEventListener("click",(function(){t._deleteHandler(t._cardElement.id)})),this._cardElement.querySelector(".like-button").addEventListener("click",(function(e){e.target.classList.toggle("like-button_active"),e.target.classList.contains("like-button_active")?n.addLike(t._cardElement.id).then((function(e){var r=e.likes;t._cardElement.querySelector(".like-button-counter").textContent=r.length})):n.deleteLike(t._cardElement.id).then((function(e){var r=e.likes;t._cardElement.querySelector(".like-button-counter").textContent=r.length}))}))}},{key:"trashBtnFunctions",value:function(){this._cardElement.querySelector(".trash-button").closest(".place-card").remove()}}])&&B(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function H(t){return H="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},H(t)}function A(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==H(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==H(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===H(o)?o:String(o)),n)}var o}var x=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._popup=e,this._form=e.querySelector(".form")}var e,r;return e=t,(r=[{key:"open",value:function(){this._popup.classList.add("popup_opened")}},{key:"close",value:function(){this._popup.classList.remove("popup_opened")}},{key:"handleEscClose",value:function(){var t=this;document.addEventListener("keydown",(function(e){e.preventDefault,"Escape"===e.key&&t.close()}))}},{key:"setEventListeners",value:function(t){var e=this;t.addEventListener("click",(function(){e.open()})),this.handleEscClose(),this._form.querySelector(".form__close-button").addEventListener("click",(function(t){t.preventDefault(),e.close()}))}}])&&A(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function U(t){return U="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},U(t)}function D(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==U(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==U(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===U(o)?o:String(o)),n)}var o}function N(){return N="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,r){var n=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=F(t)););return t}(t,e);if(n){var o=Object.getOwnPropertyDescriptor(n,e);return o.get?o.get.call(arguments.length<3?t:r):o.value}},N.apply(this,arguments)}function V(t,e){return V=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},V(t,e)}function F(t){return F=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},F(t)}var J=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&V(t,e)}(u,t);var e,r,n,o,i=(n=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=F(n);if(o){var r=F(this).constructor;t=Reflect.construct(e,arguments,r)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===U(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t){return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),i.call(this,t)}return e=u,(r=[{key:"open",value:function(t,e){N(F(u.prototype),"open",this).call(this),this._photo=document.querySelector(".popup__photo").src=t,this._photo=document.querySelector(".popup__photo").alt="imagen de ".concat(e),this._caption=document.querySelector(".popup__photo-caption").textContent=e}},{key:"handleEscClose",value:function(){var t=this;document.addEventListener("keydown",(function(e){e.preventDefault,"Escape"===e.key&&t.close()}))}}])&&D(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),u}(x);function M(t){return M="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},M(t)}function G(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==M(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==M(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===M(o)?o:String(o)),n)}var o}function Z(){return Z="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,r){var n=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=K(t)););return t}(t,e);if(n){var o=Object.getOwnPropertyDescriptor(n,e);return o.get?o.get.call(arguments.length<3?t:r):o.value}},Z.apply(this,arguments)}function $(t,e){return $=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},$(t,e)}function K(t){return K=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},K(t)}var Q=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&$(t,e)}(u,t);var e,r,n,o,i=(n=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=K(n);if(o){var r=K(this).constructor;t=Reflect.construct(e,arguments,r)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===M(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t,e){var r,n=t.formSubmitHandler;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(r=i.call(this,e))._formSubmitHandler=n,r._form=r._popup.querySelector(".form"),r}return e=u,(r=[{key:"close",value:function(){var t=this;Z(K(u.prototype),"close",this).call(this),this._popup.querySelector(".overlay").addEventListener("click",(function(e){t._popup.classList.remove("popup_opened"),e.stopImmediatePropagation()}))}},{key:"resetInputs",value:function(){this._form.reset()}},{key:"getInputValues",value:function(){this._inputList=this._form.querySelectorAll(".form__input");var t={};return this._inputList.forEach((function(e){t[e.name]=e.value})),t}},{key:"setEventListeners",value:function(t){var e=this;this.getInputValues(),Z(K(u.prototype),"setEventListeners",this).call(this,t),this._form.addEventListener("submit",(function(t){t.preventDefault(),t.stopImmediatePropagation(),e._formSubmitHandler(e.getInputValues())}))}},{key:"renderLoading",value:function(t){t?this._form.querySelector(".form__submit-button").textContent="Guardando...":(this._form.querySelector(".form__submit-button").textContent="Guardado",this.close())}}])&&G(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),u}(x);function W(t){return W="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},W(t)}function X(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==W(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==W(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===W(o)?o:String(o)),n)}var o}var Y=function(){function t(e,r){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._userName=document.querySelector(e),this._userAboutMe=document.querySelector(r)}var e,r;return e=t,(r=[{key:"getUserInfo",value:function(){this._userName.value=u.textContent,this._userAboutMe.value=a.textContent}},{key:"setUserInfo",value:function(){u.textContent=this._userName.value,a.textContent=this._userAboutMe.value}}])&&X(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function tt(t){return tt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},tt(t)}function et(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==tt(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==tt(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===tt(o)?o:String(o)),n)}var o}function rt(t,e){return rt=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},rt(t,e)}function nt(t){return nt=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},nt(t)}var ot=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&rt(t,e)}(u,t);var e,r,n,o,i=(n=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=nt(n);if(o){var r=nt(this).constructor;t=Reflect.construct(e,arguments,r)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===tt(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t,e){var r,n=t.submitHandler;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(r=i.call(this,e))._submitHandler=n,r._form=r._popup.querySelector(".form"),r}return e=u,(r=[{key:"setEventListeners",value:function(){var t=this;d.addEventListener("click",(function(e){e.preventDefault(),e.stopImmediatePropagation(),t._submitHandler(),t.close()})),b.addEventListener("click",(function(e){e.preventDefault(),t.close()}))}},{key:"submitFunctions",value:function(){var t=this;d.addEventListener("click",(function(e){e.preventDefault(),e.stopImmediatePropagation(),t._submitHandler(),t.close()})),b.addEventListener("click",(function(e){e.preventDefault(),t.close()}))}}])&&et(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),u}(x),it=new Y("#name-input","#about-me-input"),ut=new T({formSelector:"profile",inputSelector:".form__input",submitButtonSelector:".form__submit-button",inactiveButtonClass:"form__submit-button_inactive",inputErrorClass:"form__input_type_error",errorClass:"form__input-error_active"});ut.setEventListeners();var at=new T({formSelector:"place",inputSelector:".form__input",submitButtonSelector:".form__submit-button",inactiveButtonClass:"form__submit-button_inactive",inputErrorClass:"form__input_type_error",errorClass:"form__input-error_active"});at.setEventListeners();var ct=new T({formSelector:"avatar",inputSelector:".form__input",submitButtonSelector:".form__submit-button",inactiveButtonClass:"form__submit-button_inactive",inputErrorClass:"form__input_type_error",errorClass:"form__input-error_active"});ct.setEventListeners(),n.defaultProfile();var lt=new Q({formSubmitHandler:function(t){lt.renderLoading(!0),n.editProfile({name:t.name,about:t["about-me"]}).finally((function(){lt.renderLoading(!1),ut.toggleBtnState()})),it.setUserInfo(),it.getUserInfo()}},i);lt.setEventListeners(o);var st,ft=[];n.cardsAddedRequest().then((function(t){return t.ok?t.json():Promise.reject(t.status)})).then((function(t){!function(t){t.forEach((function(t){ft.push(t)}));var e=new k({items:ft,renderer:function(t){var r=new z({data:t,photoHandler:function(t,e){var r=new J(f);r.open(t,e),r.handleEscClose()},deleteHandler:function(t){var e=new ot({submitHandler:function(){n.deleteCard(t).then((function(t){})),r.trashBtnFunctions()}},h);e.setEventListeners(),e.open()}},"#card-template"),o=r.generateCard();e.addItem(o)}},R);e.renderItems()}(t)})).catch((function(t){console.log("Error: ".concat(t))})),(st=new Q({formSubmitHandler:function(t){st.renderLoading(!0),n.addNewCardPetition(t).then((function(t){var e;document.querySelector(".card-container").prepend((e=new z({data:t,photoHandler:function(t,e){var r=new J(f);r.open(t,e),r.handleEscClose()},deleteHandler:function(t){var r=new ot({submitHandler:function(){n.deleteCard(t),e.trashBtnFunctions()}},h);r.submitFunctions(),r.open()}},"#card-template")).generateCard()),st.close()})).finally((function(){st.renderLoading(!1),at.toggleBtnState()})),st.resetInputs()}},s)).setEventListeners(l);var pt=new Q({formSubmitHandler:function(t){pt.renderLoading(!0),n.updateAvatar({avatar:t.updateAvatar}).then((function(t){var e;e=t.avatar,S.src=e})).finally((function(){pt.renderLoading(!1),ct.toggleBtnState()})),pt.resetInputs()}},v);pt.setEventListeners(_)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUM3QmhKLEVBQ0dvSyxtQkFBbUJ2SyxHQUNuQnBCLE1BQUssU0FBQzRMLEdBckNqQixJQUNRQyxFQXFDSXBLLFNBQ0dDLGNBQWMsbUJBQ2RzQixTQXZDUDZJLEVBQVUsSUFBSTdGLEVBQ2xCLENBQ0UvRSxLQXFDK0IySyxFQXBDL0IxRixhQUFjLFNBQUN2RyxFQUFLSixHQUNsQixJQUFNNEwsRUFBUSxJQUFJOUMsRUFBZXZHLEdBQ2pDcUosRUFBTWhELEtBQUt4SSxFQUFLSixHQUNoQjRMLEVBQU0vQyxnQkFDUixFQUVBakMsY0FBZSxTQUFDekIsR0FDZCxJQUFNMEcsRUFBZSxJQUFJdEIsR0FDdkIsQ0FDRUMsY0FBZSxXQUNieEksRUFBSThKLFdBQVczRyxHQUNmbUgsRUFBUVAsbUJBQ1YsR0FFRm5KLEdBRUZpSixFQUFhVSxrQkFDYlYsRUFBYWpELE1BQ2YsR0FFRixtQkFHYW9ELGdCQWNMWCxHQUFlNUMsT0FDakIsSUFDQ3lDLFNBQVEsV0FDUEcsR0FBZUwsZUFBYyxHQUM3QkosR0FBZ0J4RSxnQkFDbEIsSUFDRmlGLEdBQWVtQixhQUNqQixHQUVGbEssSUFFYXFJLGtCQUFrQnRJLEdBUW5DLElBQU1vSyxHQUFrQixJQUFJakQsRUFDMUIsQ0FDRUMsa0JBQW1CLFNBQUMvSCxHQUNsQitLLEdBQWdCekIsZUFBYyxHQUM5QmhKLEVBQ0cwSyxhQUFhLENBQ1pyTSxPQUFRcUIsRUFBS2dMLGVBRWRqTSxNQUFLLFNBQUNDLEdBWGYsSUFBc0JpTSxJQVlDak0sRUFBSUwsT0FYekIyQyxFQUFjNUMsSUFBTXVNLENBWWQsSUFDQ3pCLFNBQVEsV0FDUHVCLEdBQWdCekIsZUFBYyxHQUM5QkgsR0FBaUJ6RSxnQkFDbkIsSUFDRnFHLEdBQWdCRCxhQUNsQixHQUVGMUosR0FFRjJKLEdBQWdCOUIsa0JBQWtCNUgsRSIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYl9wcm9qZWN0XzRfZXNwLy4vc3JjL3NjcmlwdC9jb21wb25lbnRzL0FQSS5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80X2VzcC8uL3NyYy9zY3JpcHQvdXRpbHMvRGF0YS5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80X2VzcC8uL3NyYy9zY3JpcHQvY29tcG9uZW50cy9TZWN0aW9uLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzRfZXNwLy4vc3JjL3NjcmlwdC9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNF9lc3AvLi9zcmMvc2NyaXB0L2NvbXBvbmVudHMvQ2FyZC5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80X2VzcC8uL3NyYy9zY3JpcHQvY29tcG9uZW50cy9Qb3B1cC5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80X2VzcC8uL3NyYy9zY3JpcHQvY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80X2VzcC8uL3NyYy9zY3JpcHQvY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzRfZXNwLy4vc3JjL3NjcmlwdC9jb21wb25lbnRzL1VzZXJJbmZvLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzRfZXNwLy4vc3JjL3NjcmlwdC9jb21wb25lbnRzL1BvcHVwV2l0aENvbmZpcm1hdGlvbi5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80X2VzcC8uL3NyYy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xyXG4gIHVzZXJOYW1lLFxyXG4gIHBvcHVwUGhvdG8sXHJcbiAgdXNlckFib3V0TWUsXHJcbiAgdXNlckF2YXRhcixcclxuICBsaWtlQ291bnRlcixcclxuICBwb3B1cERlbGV0ZUNhcmQsXHJcbiAgYXBpLFxyXG59IGZyb20gXCIuLi91dGlscy9EYXRhXCI7XHJcbmltcG9ydCB7IHJlbmRlckNhcmRzLCBhZGRlZENhcmRzQXJyYXkgfSBmcm9tIFwiLi4vLi4vaW5kZXguanNcIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBBcGkge1xyXG4gIGNvbnN0cnVjdG9yKHsgYmFzZVVybCwgaGVhZGVycyB9KSB7XHJcbiAgICB0aGlzLl9iYXNlVXJsID0gYmFzZVVybDtcclxuICAgIHRoaXMuX2hlYWRlcnMgPSBoZWFkZXJzO1xyXG4gICAgdGhpcy5fYXV0aG9yaXphdGlvbiA9IGhlYWRlcnMuYXV0aG9yaXphdGlvbjtcclxuICB9XHJcbiAgLy8gUHJvZmlsZSBBUElcclxuICByZW5kZXJSZXN1bHRzKHVzZXJEYXRhKSB7XHJcbiAgICB1c2VyTmFtZS50ZXh0Q29udGVudCA9IHVzZXJEYXRhLm5hbWU7XHJcbiAgICB1c2VyQWJvdXRNZS50ZXh0Q29udGVudCA9IHVzZXJEYXRhLmFib3V0O1xyXG4gICAgdXNlckF2YXRhci5zcmMgPSB1c2VyRGF0YS5hdmF0YXI7XHJcbiAgfVxyXG4gIGRlZmF1bHRQcm9maWxlKCkge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L3VzZXJzL21lYCwge1xyXG4gICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgYXV0aG9yaXphdGlvbjogdGhpcy5fYXV0aG9yaXphdGlvbixcclxuICAgICAgfSxcclxuICAgIH0pXHJcbiAgICAgIC50aGVuKChyZXMpID0+IHtcclxuICAgICAgICBpZiAocmVzLm9rKSB7XHJcbiAgICAgICAgICByZXR1cm4gcmVzLmpzb24oKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KHJlcy5zdGF0dXMpO1xyXG4gICAgICB9KVxyXG4gICAgICAudGhlbigocmVzKSA9PiB7XHJcbiAgICAgICAgdGhpcy5yZW5kZXJSZXN1bHRzKHJlcyk7XHJcbiAgICAgIH0pXHJcbiAgICAgIC5jYXRjaCgoZXJyb3IpID0+IHtcclxuICAgICAgICBjb25zb2xlLmxvZyhgRXJyb3I6ICR7ZXJyb3J9YCk7XHJcbiAgICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgZWRpdFByb2ZpbGUobmV3UHJvZmlsZSkge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L3VzZXJzL21lYCwge1xyXG4gICAgICBtZXRob2Q6IFwiUEFUQ0hcIixcclxuICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgIGF1dGhvcml6YXRpb246IHRoaXMuX2F1dGhvcml6YXRpb24sXHJcbiAgICAgICAgXCJjb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXHJcbiAgICAgIH0sXHJcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgICBuYW1lOiBuZXdQcm9maWxlLm5hbWUsXHJcbiAgICAgICAgYWJvdXQ6IG5ld1Byb2ZpbGUuYWJvdXQsXHJcbiAgICAgIH0pLFxyXG4gICAgfSlcclxuICAgICAgLnRoZW4oKHJlcykgPT4ge1xyXG4gICAgICAgIGlmIChyZXMub2spIHtcclxuICAgICAgICAgIHJldHVybiByZXMuanNvbigpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QocmVzLnN0YXR1cyk7XHJcbiAgICAgIH0pXHJcblxyXG4gICAgICAuY2F0Y2goKGVycm9yKSA9PiB7XHJcbiAgICAgICAgY29uc29sZS5sb2coYEVycm9yOiAke2Vycm9yfWApO1xyXG4gICAgICB9KTtcclxuICB9XHJcbiAgdXBkYXRlQXZhdGFyKGRhdGEpIHtcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS91c2Vycy9tZS9hdmF0YXJgLCB7XHJcbiAgICAgIG1ldGhvZDogXCJQQVRDSFwiLFxyXG4gICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgYXV0aG9yaXphdGlvbjogdGhpcy5fYXV0aG9yaXphdGlvbixcclxuICAgICAgICBcImNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcclxuICAgICAgfSxcclxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICAgIGF2YXRhcjogZGF0YS5hdmF0YXIsXHJcbiAgICAgIH0pLFxyXG4gICAgfSlcclxuICAgICAgLnRoZW4oKHJlcykgPT4ge1xyXG4gICAgICAgIGlmIChyZXMub2spIHtcclxuICAgICAgICAgIHJldHVybiByZXMuanNvbigpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QocmVzLnN0YXR1cyk7XHJcbiAgICAgIH0pXHJcblxyXG4gICAgICAuY2F0Y2goKGVycm9yKSA9PiB7XHJcbiAgICAgICAgY29uc29sZS5sb2coYEVycm9yOiAke2Vycm9yfWApO1xyXG4gICAgICB9KTtcclxuICB9XHJcbiAgLy9saWtlc1xyXG4gIGFkZExpa2UoY2FyZElkKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHMvbGlrZXMvJHtjYXJkSWR9YCwge1xyXG4gICAgICBtZXRob2Q6IFwiUFVUXCIsXHJcbiAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICBhdXRob3JpemF0aW9uOiB0aGlzLl9hdXRob3JpemF0aW9uLFxyXG4gICAgICAgIFwiY29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxyXG4gICAgICB9LFxyXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XHJcbiAgICAgICAgbmFtZTogcHJvZmlsZS5uYW1lLFxyXG4gICAgICAgIGFib3V0OiBwcm9maWxlLmFib3V0LFxyXG4gICAgICB9KSxcclxuICAgIH0pXHJcbiAgICAgIC50aGVuKChyZXMpID0+IHtcclxuICAgICAgICBpZiAocmVzLm9rKSB7XHJcbiAgICAgICAgICByZXR1cm4gcmVzLmpzb24oKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KHJlcy5zdGF0dXMpO1xyXG4gICAgICB9KVxyXG5cclxuICAgICAgLmNhdGNoKChlcnJvcikgPT4ge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKGBFcnJvcjogJHtlcnJvcn1gKTtcclxuICAgICAgfSk7XHJcbiAgfVxyXG4gIGRlbGV0ZUxpa2UoY2FyZElkKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHMvbGlrZXMvJHtjYXJkSWR9YCwge1xyXG4gICAgICBtZXRob2Q6IFwiREVMRVRFXCIsXHJcbiAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICBhdXRob3JpemF0aW9uOiB0aGlzLl9hdXRob3JpemF0aW9uLFxyXG4gICAgICAgIFwiY29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxyXG4gICAgICB9LFxyXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XHJcbiAgICAgICAgbmFtZTogcHJvZmlsZS5uYW1lLFxyXG4gICAgICAgIGFib3V0OiBwcm9maWxlLmFib3V0LFxyXG4gICAgICB9KSxcclxuICAgIH0pXHJcbiAgICAgIC50aGVuKChyZXMpID0+IHtcclxuICAgICAgICBpZiAocmVzLm9rKSB7XHJcbiAgICAgICAgICByZXR1cm4gcmVzLmpzb24oKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KHJlcy5zdGF0dXMpO1xyXG4gICAgICB9KVxyXG5cclxuICAgICAgLmNhdGNoKChlcnJvcikgPT4ge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKGBFcnJvcjogJHtlcnJvcn1gKTtcclxuICAgICAgfSk7XHJcbiAgfVxyXG4gIC8vIHRlcm1pbmEgcHJvZmlsZSBmdW5jdGlvbnNcclxuICBjYXJkc0FkZGVkUmVxdWVzdCgpIHtcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkc2AsIHtcclxuICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgIGF1dGhvcml6YXRpb246IHRoaXMuX2F1dGhvcml6YXRpb24sXHJcbiAgICAgIH0sXHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIGFkZE5ld0NhcmRQZXRpdGlvbihuZXdDYXJkKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHNgLCB7XHJcbiAgICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcbiAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICBhdXRob3JpemF0aW9uOiB0aGlzLl9hdXRob3JpemF0aW9uLFxyXG4gICAgICAgIFwiY29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxyXG4gICAgICB9LFxyXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XHJcbiAgICAgICAgbmFtZTogbmV3Q2FyZC5wbGFjZU5hbWUsXHJcbiAgICAgICAgbGluazogbmV3Q2FyZC5saW5rLFxyXG4gICAgICB9KSxcclxuICAgIH0pXHJcbiAgICAgIC50aGVuKChyZXMpID0+XHJcbiAgICAgICAgcmVzLm9rID8gcmVzLmpzb24oKSA6IFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXMuc3RhdHVzfWApXHJcbiAgICAgIClcclxuXHJcbiAgICAgIC5jYXRjaCgoZXJyb3IpID0+IHtcclxuICAgICAgICBjb25zb2xlLmxvZyhgRXJyb3I6ICR7ZXJyb3J9YCk7XHJcbiAgICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgZGVsZXRlQ2FyZChjYXJkSWQpIHtcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkcy8ke2NhcmRJZH1gLCB7XHJcbiAgICAgIG1ldGhvZDogXCJERUxFVEVcIixcclxuICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgIGF1dGhvcml6YXRpb246IHRoaXMuX2F1dGhvcml6YXRpb24sXHJcbiAgICAgICAgXCJjb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXHJcbiAgICAgIH0sXHJcbiAgICB9KVxyXG4gICAgICAudGhlbigocmVzKSA9PiB7XHJcbiAgICAgICAgaWYgKHJlcy5vaykge1xyXG4gICAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChyZXMuc3RhdHVzKTtcclxuICAgICAgfSlcclxuXHJcbiAgICAgIC5jYXRjaCgoZXJyb3IpID0+IHtcclxuICAgICAgICBjb25zb2xlLmxvZyhgRXJyb3I6ICR7ZXJyb3J9YCk7XHJcbiAgICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgcmV0dXJuQ2FyZEluZm8oY2FyZElkKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHMvJHtjYXJkSWR9YCwge1xyXG4gICAgICBtZXRob2Q6IFwiR0VUXCIsXHJcbiAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICBhdXRob3JpemF0aW9uOiB0aGlzLl9hdXRob3JpemF0aW9uLFxyXG4gICAgICB9LFxyXG4gICAgfSlcclxuICAgICAgLnRoZW4oKHJlcykgPT4ge1xyXG4gICAgICAgIGlmIChyZXMub2spIHtcclxuICAgICAgICAgIHJldHVybiByZXMuanNvbigpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QocmVzLnN0YXR1cyk7XHJcbiAgICAgIH0pXHJcblxyXG4gICAgICAuY2F0Y2goKGVycm9yKSA9PiB7XHJcbiAgICAgICAgY29uc29sZS5sb2coYEVycm9yOiAke2Vycm9yfWApO1xyXG4gICAgICB9KTtcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IHsgQXBpIH0gZnJvbSBcIi4uL2NvbXBvbmVudHMvQVBJLmpzXCI7XHJcbmV4cG9ydCBjb25zdCBhcGkgPSBuZXcgQXBpKHtcclxuICBiYXNlVXJsOiBcImh0dHBzOi8vYXJvdW5kLm5vbW9yZXBhcnRpZXMuY28vdjEvd2ViX2VzXzA3L1wiLFxyXG4gIGhlYWRlcnM6IHtcclxuICAgIGF1dGhvcml6YXRpb246IFwiZDczZmY4YTQtNWFkNy00MmNiLTk5OWMtZDA4NGNhMmU2ODQ3XCIsXHJcbiAgICBcImNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcclxuICB9LFxyXG59KTtcclxuXHJcbi8vY29uc3RhbnRlcyB1bml2ZXJzYWxlc1xyXG5leHBvcnQgY29uc3QgYnRuRWRpdFByb2ZpbGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmVkaXQtYnV0dG9uXCIpO1xyXG5leHBvcnQgY29uc3QgYnRuQ3JlYXRlUHJvZmlsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZm9ybV9fc3VibWl0LWJ1dHRvblwiKTtcclxuZXhwb3J0IGNvbnN0IGJ0bkNsb3NlRWRpdFByb2ZpbGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gIFwiLmZvcm1fX2Nsb3NlLWJ1dHRvblwiXHJcbik7XHJcbmV4cG9ydCBjb25zdCBwb3B1cEVkaXRQcm9maWxlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcclxuICBcIi5wb3B1cF90eXBlX2VkaXQtcHJvZmlsZVwiXHJcbik7XHJcbmV4cG9ydCBjb25zdCB1c2VyTmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fdXNlci1uYW1lXCIpO1xyXG5leHBvcnQgY29uc3QgdXNlckFib3V0TWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX3VzZXItcHJvZmVzc2lvblwiKTtcclxuZXhwb3J0IGNvbnN0IHVzZXJBdmF0YXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2F2YXRhclwiKTtcclxuZXhwb3J0IGNvbnN0IHVzZXJOYW1lSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI25hbWUtaW5wdXRcIik7XHJcbmV4cG9ydCBjb25zdCB1c2VyUHJvZmVzc2lvbklucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNhYm91dC1tZS1pbnB1dFwiKTtcclxuZXhwb3J0IGNvbnN0IGJ0bkFkZE5ld1BsYWNlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5hZGQtYnV0dG9uXCIpO1xyXG5leHBvcnQgY29uc3QgYnRuQ2xvc2VOZXdQbGFjZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgXCIuZm9ybV9fY2xvc2UtYnV0dG9uX3R5cGVfbmV3LXBsYWNlXCJcclxuKTtcclxuZXhwb3J0IGNvbnN0IHBvcHVwQWRkTmV3UGxhY2UgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX3R5cGVfbmV3LXBsYWNlXCIpO1xyXG5leHBvcnQgY29uc3QgYnRuU3VibWl0TmV3UGxhY2UgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gIFwiLmZvcm1fX3N1Ym1pdC1idXR0b25fcGxhY2VcIlxyXG4pO1xyXG5cclxuZXhwb3J0IGNvbnN0IGNhcmRzQ29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkLWNvbnRhaW5lclwiKTtcclxuZXhwb3J0IGNvbnN0IHBvcHVwUGhvdG8gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX3R5cGVfcGhvdG9cIik7XHJcblxyXG4vL3BvcHVwIHBob3RvXHJcbmV4cG9ydCBjb25zdCBsaW5rUG9wdXAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19waG90b1wiKTtcclxuZXhwb3J0IGNvbnN0IGNhcHRpb25Qb3B1cCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX3Bob3RvLWNhcHRpb25cIik7XHJcbmV4cG9ydCBjb25zdCBidG5DbG9zZVBob3RvID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fY2xvc2UtYnV0dG9uXCIpO1xyXG5cclxuLy9kZWxldGUgcG9wdXBcclxuZXhwb3J0IGNvbnN0IGJ0bkRlbGV0ZUNvbmZpcm1hdGlvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgXCIuZm9ybV9fc3VibWl0LWJ1dHRvbl9kZWxldGVcIlxyXG4pO1xyXG5leHBvcnQgY29uc3QgcG9wdXBEZWxldGVDYXJkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF90eXBlX2RlbGV0ZVwiKTtcclxuZXhwb3J0IGNvbnN0IGNsb3NlRGVsZXRlUG9wdXAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gIFwiLmZvcm1fX2Nsb3NlLWJ1dHRvbl90eXBlX2RlbGV0ZVwiXHJcbik7XHJcbi8vZWRpdCBBdmF0YXJcclxuZXhwb3J0IGNvbnN0IHBvcHVwVXBkYXRlQXZhdGFyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcclxuICBcIi5wb3B1cF90eXBlX3VwZGF0ZS1hdmF0YXJcIlxyXG4pO1xyXG5leHBvcnQgY29uc3QgYnRuVXBkYXRlQXZhdGFyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcclxuICBcIi5wcm9maWxlX19hdmF0YXItb3ZlcmxheVwiXHJcbik7XHJcbmV4cG9ydCBjb25zdCBwcm9maWxlQXZhdGFyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19hdmF0YXJcIik7XHJcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFNlY3Rpb24ge1xyXG4gIGNvbnN0cnVjdG9yKHsgaXRlbXMsIHJlbmRlcmVyIH0sIGNvbnRhaW5lclNlbGVjdG9yKSB7XHJcbiAgICB0aGlzLl9pdGVtc0FycmF5ID0gaXRlbXM7XHJcbiAgICB0aGlzLl9yZW5kZXJlciA9IHJlbmRlcmVyO1xyXG4gICAgdGhpcy5fY29udGFpbmVyID0gY29udGFpbmVyU2VsZWN0b3I7XHJcbiAgfVxyXG4gIGFkZEl0ZW0oaXRlbSkge1xyXG4gICAgdGhpcy5fY29udGFpbmVyLnByZXBlbmQoaXRlbSk7XHJcbiAgfVxyXG4gIHJlbmRlckl0ZW1zKCkge1xyXG4gICAgdGhpcy5faXRlbXNBcnJheS5mb3JFYWNoKChpdGVtKSA9PiB7XHJcbiAgICAgIHRoaXMuX3JlbmRlcmVyKGl0ZW0pO1xyXG4gICAgfSk7XHJcbiAgfVxyXG59XHJcbiIsImNvbnN0IHJlZ0V4ID0ge1xyXG4gIG5hbWU6IC9eW0EtWmEtelxcLV17MiwxMDB9JC8sXHJcbiAgYWJvdXRNZTogL15bQS1aYS16XFwtXXsyLDIwfSQvLFxyXG4gIHBsYWNlTmFtZTogL15bQS1aYS16XFwtXXszLDIwfSQvLFxyXG4gIGxpbms6IC9eaHR0cHM/OlxcL1xcLy8sXHJcbiAgdXBkYXRlQXZhdGFyOiAvXmh0dHBzPzpcXC9cXC8vLFxyXG59O1xyXG5cclxuZXhwb3J0IGNsYXNzIEZvcm1WYWxpZGF0b3Ige1xyXG4gIGNvbnN0cnVjdG9yKG9ialRvVmFsaWRhdGUpIHtcclxuICAgIHRoaXMuX2Zvcm1TZWxlY3RvciA9IG9ialRvVmFsaWRhdGUuZm9ybVNlbGVjdG9yO1xyXG4gICAgdGhpcy5faW5wdXRTZWxlY3RvciA9IG9ialRvVmFsaWRhdGUuaW5wdXRTZWxlY3RvcjtcclxuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvblNlbGVjdG9yID0gb2JqVG9WYWxpZGF0ZS5zdWJtaXRCdXR0b25TZWxlY3RvcjtcclxuICAgIHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MgPSBvYmpUb1ZhbGlkYXRlLmluYWN0aXZlQnV0dG9uQ2xhc3M7XHJcbiAgICB0aGlzLl9pbnB1dEVycm9yQ2xhc3MgPSBvYmpUb1ZhbGlkYXRlLmlucHV0RXJyb3JDbGFzcztcclxuICAgIHRoaXMuX2Vycm9yQ2xhc3MgPSBvYmpUb1ZhbGlkYXRlLmVycm9yQ2xhc3M7XHJcbiAgfVxyXG5cclxuICAvL3Rlcm1pbmEgZWwgY29uc3RydWN0b3JcclxuXHJcbiAgc3dpdGNoaW5nSW5wdXQoZXZ0KSB7XHJcbiAgICBzd2l0Y2ggKGV2dC50YXJnZXQubmFtZSkge1xyXG4gICAgICBjYXNlIFwibmFtZVwiOlxyXG4gICAgICAgIHRoaXMuX2NoZWNrSW5wdXRWYWxpZGl0eShyZWdFeC5uYW1lLCBldnQudGFyZ2V0LCB0aGlzLl9mb3JtU2VsZWN0b3IpO1xyXG4gICAgICAgIGJyZWFrO1xyXG4gICAgICBjYXNlIFwiYWJvdXQtbWVcIjpcclxuICAgICAgICB0aGlzLl9jaGVja0lucHV0VmFsaWRpdHkocmVnRXguYWJvdXRNZSwgZXZ0LnRhcmdldCwgdGhpcy5fZm9ybVNlbGVjdG9yKTtcclxuICAgICAgICBicmVhaztcclxuICAgICAgY2FzZSBcInBsYWNlTmFtZVwiOlxyXG4gICAgICAgIHRoaXMuX2NoZWNrSW5wdXRWYWxpZGl0eShcclxuICAgICAgICAgIHJlZ0V4LnBsYWNlTmFtZSxcclxuICAgICAgICAgIGV2dC50YXJnZXQsXHJcbiAgICAgICAgICB0aGlzLl9mb3JtU2VsZWN0b3JcclxuICAgICAgICApO1xyXG4gICAgICAgIGJyZWFrO1xyXG4gICAgICBjYXNlIFwibGlua1wiOlxyXG4gICAgICAgIHRoaXMuX2NoZWNrSW5wdXRWYWxpZGl0eShyZWdFeC5saW5rLCBldnQudGFyZ2V0LCB0aGlzLl9mb3JtU2VsZWN0b3IpO1xyXG4gICAgICAgIGJyZWFrO1xyXG4gICAgICBjYXNlIFwidXBkYXRlQXZhdGFyXCI6XHJcbiAgICAgICAgdGhpcy5fY2hlY2tJbnB1dFZhbGlkaXR5KFxyXG4gICAgICAgICAgcmVnRXgudXBkYXRlQXZhdGFyLFxyXG4gICAgICAgICAgZXZ0LnRhcmdldCxcclxuICAgICAgICAgIHRoaXMuX2Zvcm1TZWxlY3RvclxyXG4gICAgICAgICk7XHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBfY2hlY2tJbnB1dFZhbGlkaXR5KGV4cHJlc2lvbiwgaW5wdXRFbGVtZW50LCBmb3JtSUQpIHtcclxuICAgIGNvbnN0IGZvcm1FbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoZm9ybUlEKTtcclxuICAgIGNvbnN0IGVycm9yRWxlbWVudCA9IGZvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoYC4ke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgKTtcclxuICAgIGNvbnN0IGJ0bkVsZW1lbnQgPSBmb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKHRoaXMuX3N1Ym1pdEJ1dHRvblNlbGVjdG9yKTtcclxuICAgIGlmIChleHByZXNpb24udGVzdChpbnB1dEVsZW1lbnQudmFsdWUpKSB7XHJcbiAgICAgIGVycm9yRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2Vycm9yQ2xhc3MpO1xyXG4gICAgICBpbnB1dEVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbnB1dEVycm9yQ2xhc3MpO1xyXG4gICAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSBcIlwiO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gaW5wdXRFbGVtZW50LnZhbGlkYXRpb25NZXNzYWdlO1xyXG4gICAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9lcnJvckNsYXNzKTtcclxuICAgICAgaW5wdXRFbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5faW5wdXRFcnJvckNsYXNzKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8vIHRlcm1pbmEgY2hlY2sgc2hvdyBlcnJvclxyXG5cclxuICAvLyBpcyB2YWxpZFxyXG5cclxuICBfaGFzSW52YWxpZElucHV0KGZvcm1JRCkge1xyXG4gICAgY29uc3QgZm9ybUVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChmb3JtSUQpO1xyXG4gICAgY29uc3QgaW5wdXRzTGlzdCA9IEFycmF5LmZyb20oXHJcbiAgICAgIGZvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwodGhpcy5faW5wdXRTZWxlY3RvcilcclxuICAgICk7XHJcbiAgICByZXR1cm4gaW5wdXRzTGlzdC5zb21lKChpbnB1dEVsZW1lbnQpID0+IHtcclxuICAgICAgcmV0dXJuICFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQ7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIC8vIHRvZ2dsZUJ0blxyXG5cclxuICB0b2dnbGVCdG5TdGF0ZSgpIHtcclxuICAgIGNvbnN0IGZvcm1FbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQodGhpcy5fZm9ybVNlbGVjdG9yKTtcclxuICAgIGNvbnN0IGJ0bkVsZW1lbnQgPSBmb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKHRoaXMuX3N1Ym1pdEJ1dHRvblNlbGVjdG9yKTtcclxuICAgIGlmICh0aGlzLl9oYXNJbnZhbGlkSW5wdXQodGhpcy5fZm9ybVNlbGVjdG9yKSkge1xyXG4gICAgICBidG5FbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyk7XHJcbiAgICAgIGJ0bkVsZW1lbnQuc2V0QXR0cmlidXRlKFwiZGlzYWJsZWRcIiwgdHJ1ZSk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBidG5FbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyk7XHJcbiAgICAgIGJ0bkVsZW1lbnQucmVtb3ZlQXR0cmlidXRlKFwiZGlzYWJsZWRcIiwgZmFsc2UpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLy9wcnVlYmEgZW5hYmxlIHZhbGlkYXRpb25cclxuXHJcbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICBjb25zdCBmb3JtRWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHRoaXMuX2Zvcm1TZWxlY3Rvcik7XHJcbiAgICBjb25zdCBpbnB1dHNMaXN0ID0gQXJyYXkuZnJvbShcclxuICAgICAgZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvckFsbCh0aGlzLl9pbnB1dFNlbGVjdG9yKVxyXG4gICAgKTtcclxuICAgIGNvbnN0IGJ0bkVsZW1lbnQgPSBmb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKHRoaXMuX3N1Ym1pdEJ1dHRvblNlbGVjdG9yKTtcclxuICAgIHRoaXMudG9nZ2xlQnRuU3RhdGUoKTtcclxuICAgIGlucHV0c0xpc3QuZm9yRWFjaCgoaW5wdXRFbGVtZW50KSA9PiB7XHJcbiAgICAgIGlucHV0RWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwiaW5wdXRcIiwgKGV2dCkgPT4ge1xyXG4gICAgICAgIGV2dC5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKTtcclxuICAgICAgICB0aGlzLnN3aXRjaGluZ0lucHV0KGV2dCk7XHJcbiAgICAgICAgdGhpcy50b2dnbGVCdG5TdGF0ZSgpO1xyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG4gICAgdGhpcy50b2dnbGVCdG5TdGF0ZSgpO1xyXG4gIH1cclxufVxyXG5cclxuLy90ZXJtaW5hIG9iamV0b1xyXG5cclxuLy8gIHBydWViYSBQYXJhIFByb2ZpbGUgZm9ybVxyXG5cclxuLy9Qcm95ZWN0byA4XHJcbiIsImltcG9ydCB7XHJcbiAgcG9wdXBQaG90byxcclxuICBsaW5rUG9wdXAsXHJcbiAgY2FwdGlvblBvcHVwLFxyXG4gIGJ0bkNsb3NlUGhvdG8sXHJcbiAgYXBpLFxyXG59IGZyb20gXCIuLi91dGlscy9EYXRhLmpzXCI7XHJcblxyXG5leHBvcnQgY29uc3QgY2FyZHNDb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmQtY29udGFpbmVyXCIpO1xyXG5leHBvcnQgY2xhc3MgQ2FyZCB7XHJcbiAgY29uc3RydWN0b3IoeyBkYXRhLCBwaG90b0hhbmRsZXIsIGRlbGV0ZUhhbmRsZXIgfSwgdGVtcGxhdGVTZWxlY3Rvcikge1xyXG4gICAgdGhpcy5fbmFtZSA9IGRhdGEubmFtZTtcclxuICAgIHRoaXMuX2xpbmsgPSBkYXRhLmxpbms7XHJcbiAgICB0aGlzLl9pZCA9IGRhdGEuX2lkO1xyXG4gICAgdGhpcy5fbGlrZXMgPSBkYXRhLmxpa2VzO1xyXG4gICAgdGhpcy5fdGVtcGxhdGVTZWxlY3RvciA9IHRlbXBsYXRlU2VsZWN0b3I7XHJcbiAgICB0aGlzLl9waG90b0hhbmRsZXIgPSBwaG90b0hhbmRsZXI7XHJcbiAgICB0aGlzLl9kZWxldGVIYW5kbGVyID0gZGVsZXRlSGFuZGxlcjtcclxuICAgIHRoaXMuX2xpa2VzID0gZGF0YS5saWtlcztcclxuICB9XHJcblxyXG4gIGdldFRlbXBsYXRlKCkge1xyXG4gICAgY29uc3QgY2FyZFRlbXBsYXRlID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLl90ZW1wbGF0ZVNlbGVjdG9yKS5jb250ZW50O1xyXG4gICAgY29uc3QgY2FyZEVsZW1lbnQgPSBjYXJkVGVtcGxhdGVcclxuICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIucGxhY2UtY2FyZFwiKVxyXG4gICAgICAuY2xvbmVOb2RlKHRydWUpO1xyXG4gICAgcmV0dXJuIGNhcmRFbGVtZW50O1xyXG4gIH1cclxuXHJcbiAgZ2VuZXJhdGVDYXJkKCkge1xyXG4gICAgdGhpcy5fY2FyZEVsZW1lbnQgPSB0aGlzLmdldFRlbXBsYXRlKCk7XHJcbiAgICB0aGlzLl9jYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLnBsYWNlLWNhcmRfX25hbWVcIikudGV4dENvbnRlbnQgPVxyXG4gICAgICB0aGlzLl9uYW1lO1xyXG4gICAgdGhpcy5fY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5wbGFjZS1jYXJkX19waG90b1wiKS5zcmMgPSB0aGlzLl9saW5rO1xyXG4gICAgdGhpcy5fY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihcclxuICAgICAgXCIucGxhY2UtY2FyZF9fcGhvdG9cIlxyXG4gICAgKS5hbHQgPSBgaW1hZ2VuIGRlICR7dGhpcy5fbmFtZX1gO1xyXG4gICAgdGhpcy5fY2FyZEVsZW1lbnQuaWQgPSB0aGlzLl9pZDtcclxuICAgIHRoaXMuX2NhcmRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubGlrZS1idXR0b24tY291bnRlclwiKS50ZXh0Q29udGVudCA9XHJcbiAgICAgIHRoaXMuX2xpa2VzLmxlbmd0aDtcclxuICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgICByZXR1cm4gdGhpcy5fY2FyZEVsZW1lbnQ7XHJcbiAgfVxyXG5cclxuICBfaGFuZGxlT3BlblBvcHVwKCkge1xyXG4gICAgdGhpcy5fcGhvdG9IYW5kbGVyKHRoaXMuX2xpbmssIHRoaXMuX25hbWUpO1xyXG4gIH1cclxuXHJcbiAgX2hhbmRsZUNsb3NlUG9wdXAoKSB7XHJcbiAgICBsaW5rUG9wdXAuc3JjID0gXCIgXCI7XHJcbiAgICBjYXB0aW9uUG9wdXAudGV4dENvbnRlbnQgPSBcIiBcIjtcclxuICAgIHBvcHVwUGhvdG8uY2xhc3NMaXN0LnJlbW92ZShcInBvcHVwX29wZW5lZFwiKTtcclxuICB9XHJcblxyXG4gIF9zZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgIHRoaXMuX2NhcmRFbGVtZW50XHJcbiAgICAgIC5xdWVyeVNlbGVjdG9yKFwiLnBsYWNlLWNhcmRfX3Bob3RvXCIpXHJcbiAgICAgIC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gICAgICAgIHRoaXMuX2hhbmRsZU9wZW5Qb3B1cCgpO1xyXG4gICAgICB9KTtcclxuXHJcbiAgICBidG5DbG9zZVBob3RvLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICAgIHRoaXMuX2hhbmRsZUNsb3NlUG9wdXAoKTtcclxuICAgIH0pO1xyXG4gICAgY29uc3QgdHJhc2hCdG4gPSB0aGlzLl9jYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLnRyYXNoLWJ1dHRvblwiKTtcclxuICAgIHRyYXNoQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICAgIHRoaXMuX2RlbGV0ZUhhbmRsZXIodGhpcy5fY2FyZEVsZW1lbnQuaWQpO1xyXG4gICAgfSk7XHJcbiAgICBjb25zdCBsaWtlSWNvbiA9IHRoaXMuX2NhcmRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubGlrZS1idXR0b25cIik7XHJcbiAgICBsaWtlSWNvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGV2dCkgPT4ge1xyXG4gICAgICBldnQudGFyZ2V0LmNsYXNzTGlzdC50b2dnbGUoXCJsaWtlLWJ1dHRvbl9hY3RpdmVcIik7XHJcblxyXG4gICAgICBpZiAoZXZ0LnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJsaWtlLWJ1dHRvbl9hY3RpdmVcIikpIHtcclxuICAgICAgICBhcGkuYWRkTGlrZSh0aGlzLl9jYXJkRWxlbWVudC5pZCkudGhlbigocmVzKSA9PiB7XHJcbiAgICAgICAgICBjb25zdCBsaWtlc2luaXRBcnJheSA9IHJlcy5saWtlcztcclxuXHJcbiAgICAgICAgICB0aGlzLl9jYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmxpa2UtYnV0dG9uLWNvdW50ZXJcIikudGV4dENvbnRlbnQgPVxyXG4gICAgICAgICAgICBsaWtlc2luaXRBcnJheS5sZW5ndGg7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgYXBpLmRlbGV0ZUxpa2UodGhpcy5fY2FyZEVsZW1lbnQuaWQpLnRoZW4oKHJlcykgPT4ge1xyXG4gICAgICAgICAgY29uc3QgbGlrZXNpbml0QXJyYXkgPSByZXMubGlrZXM7XHJcblxyXG4gICAgICAgICAgdGhpcy5fY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5saWtlLWJ1dHRvbi1jb3VudGVyXCIpLnRleHRDb250ZW50ID1cclxuICAgICAgICAgICAgbGlrZXNpbml0QXJyYXkubGVuZ3RoO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIHRyYXNoQnRuRnVuY3Rpb25zKCkge1xyXG4gICAgY29uc3QgdHJhc2hCdG4gPSB0aGlzLl9jYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLnRyYXNoLWJ1dHRvblwiKTtcclxuXHJcbiAgICBjb25zdCBjYXJkVG9SZW1vdmUgPSB0cmFzaEJ0bi5jbG9zZXN0KFwiLnBsYWNlLWNhcmRcIik7XHJcblxyXG4gICAgY2FyZFRvUmVtb3ZlLnJlbW92ZSgpO1xyXG4gIH1cclxufVxyXG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cCB7XHJcbiAgY29uc3RydWN0b3IocG9wdXApIHtcclxuICAgIHRoaXMuX3BvcHVwID0gcG9wdXA7XHJcbiAgICB0aGlzLl9mb3JtID0gcG9wdXAucXVlcnlTZWxlY3RvcihcIi5mb3JtXCIpO1xyXG4gIH1cclxuICBvcGVuKCkge1xyXG4gICAgdGhpcy5fcG9wdXAuY2xhc3NMaXN0LmFkZChcInBvcHVwX29wZW5lZFwiKTtcclxuICB9XHJcbiAgY2xvc2UoKSB7XHJcbiAgICB0aGlzLl9wb3B1cC5jbGFzc0xpc3QucmVtb3ZlKFwicG9wdXBfb3BlbmVkXCIpO1xyXG4gIH1cclxuICBoYW5kbGVFc2NDbG9zZSgpIHtcclxuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIChldnQpID0+IHtcclxuICAgICAgZXZ0LnByZXZlbnREZWZhdWx0O1xyXG4gICAgICBpZiAoZXZ0LmtleSA9PT0gXCJFc2NhcGVcIikge1xyXG4gICAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfVxyXG4gIHNldEV2ZW50TGlzdGVuZXJzKG9wZW5CdXR0b24pIHtcclxuICAgIG9wZW5CdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgICAgdGhpcy5vcGVuKCk7XHJcbiAgICB9KTtcclxuICAgIHRoaXMuaGFuZGxlRXNjQ2xvc2UoKTtcclxuICAgIHRoaXMuX2Zvcm1cclxuICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIuZm9ybV9fY2xvc2UtYnV0dG9uXCIpXHJcbiAgICAgIC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGV2dCkgPT4ge1xyXG4gICAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgICAgfSk7XHJcbiAgfVxyXG59XHJcbiIsIi8vIHBvcHVwIHdpdGggaW1hZ2VcclxuaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEltYWdlIGV4dGVuZHMgUG9wdXAge1xyXG4gIGNvbnN0cnVjdG9yKHBvcHVwKSB7XHJcbiAgICBzdXBlcihwb3B1cCk7XHJcbiAgfVxyXG4gIG9wZW4oc3JjLCBuYW1lKSB7XHJcbiAgICBzdXBlci5vcGVuKCk7XHJcbiAgICB0aGlzLl9waG90byA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX3Bob3RvXCIpLnNyYyA9IHNyYztcclxuICAgIHRoaXMuX3Bob3RvID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcclxuICAgICAgXCIucG9wdXBfX3Bob3RvXCJcclxuICAgICkuYWx0ID0gYGltYWdlbiBkZSAke25hbWV9YDtcclxuICAgIHRoaXMuX2NhcHRpb24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gICAgICBcIi5wb3B1cF9fcGhvdG8tY2FwdGlvblwiXHJcbiAgICApLnRleHRDb250ZW50ID0gbmFtZTtcclxuICB9XHJcbiAgaGFuZGxlRXNjQ2xvc2UoKSB7XHJcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCAoZXZ0KSA9PiB7XHJcbiAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdDtcclxuICAgICAgaWYgKGV2dC5rZXkgPT09IFwiRXNjYXBlXCIpIHtcclxuICAgICAgICB0aGlzLmNsb3NlKCk7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXAuanNcIjtcclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoRm9ybSBleHRlbmRzIFBvcHVwIHtcclxuICBjb25zdHJ1Y3Rvcih7IGZvcm1TdWJtaXRIYW5kbGVyIH0sIHBvcHVwKSB7XHJcbiAgICBzdXBlcihwb3B1cCk7XHJcbiAgICB0aGlzLl9mb3JtU3VibWl0SGFuZGxlciA9IGZvcm1TdWJtaXRIYW5kbGVyO1xyXG4gICAgdGhpcy5fZm9ybSA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoXCIuZm9ybVwiKTtcclxuICB9XHJcblxyXG4gIGNsb3NlKCkge1xyXG4gICAgc3VwZXIuY2xvc2UoKTtcclxuICAgIHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoXCIub3ZlcmxheVwiKS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGV2dCkgPT4ge1xyXG4gICAgICB0aGlzLl9wb3B1cC5jbGFzc0xpc3QucmVtb3ZlKFwicG9wdXBfb3BlbmVkXCIpO1xyXG4gICAgICBldnQuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCk7XHJcbiAgICB9KTtcclxuICB9XHJcbiAgcmVzZXRJbnB1dHMoKSB7XHJcbiAgICB0aGlzLl9mb3JtLnJlc2V0KCk7XHJcbiAgfVxyXG4gIGdldElucHV0VmFsdWVzKCkge1xyXG4gICAgdGhpcy5faW5wdXRMaXN0ID0gdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yQWxsKFwiLmZvcm1fX2lucHV0XCIpO1xyXG4gICAgY29uc3QgZm9ybVZhbHVlcyA9IHt9O1xyXG4gICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGlucHV0KSA9PiB7XHJcbiAgICAgIGZvcm1WYWx1ZXNbaW5wdXQubmFtZV0gPSBpbnB1dC52YWx1ZTtcclxuICAgIH0pO1xyXG4gICAgcmV0dXJuIGZvcm1WYWx1ZXM7XHJcbiAgfVxyXG5cclxuICBzZXRFdmVudExpc3RlbmVycyhvcGVuQnV0dG9uKSB7XHJcbiAgICB0aGlzLmdldElucHV0VmFsdWVzKCk7XHJcblxyXG4gICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMob3BlbkJ1dHRvbik7XHJcbiAgICB0aGlzLl9mb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGV2dCkgPT4ge1xyXG4gICAgICBldnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgZXZ0LnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpO1xyXG4gICAgICB0aGlzLl9mb3JtU3VibWl0SGFuZGxlcih0aGlzLmdldElucHV0VmFsdWVzKCkpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICByZW5kZXJMb2FkaW5nKGlzTG9hZGluZykge1xyXG4gICAgaWYgKGlzTG9hZGluZykge1xyXG4gICAgICB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3IoXCIuZm9ybV9fc3VibWl0LWJ1dHRvblwiKS50ZXh0Q29udGVudCA9XHJcbiAgICAgICAgXCJHdWFyZGFuZG8uLi5cIjtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvcihcIi5mb3JtX19zdWJtaXQtYnV0dG9uXCIpLnRleHRDb250ZW50ID0gXCJHdWFyZGFkb1wiO1xyXG4gICAgICB0aGlzLmNsb3NlKCk7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCB7IHVzZXJOYW1lLCB1c2VyQWJvdXRNZSB9IGZyb20gXCIuLi91dGlscy9EYXRhLmpzXCI7XHJcbmV4cG9ydCBjbGFzcyBVc2VySW5mbyB7XHJcbiAgY29uc3RydWN0b3IoaW5wdXROYW1lU2VsZWN0b3IsIGlucHV0QWJvdXRTZWxlY3Rvcikge1xyXG4gICAgdGhpcy5fdXNlck5hbWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGlucHV0TmFtZVNlbGVjdG9yKTtcclxuICAgIHRoaXMuX3VzZXJBYm91dE1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihpbnB1dEFib3V0U2VsZWN0b3IpO1xyXG4gIH1cclxuICBnZXRVc2VySW5mbygpIHtcclxuICAgIHRoaXMuX3VzZXJOYW1lLnZhbHVlID0gdXNlck5hbWUudGV4dENvbnRlbnQ7XHJcbiAgICB0aGlzLl91c2VyQWJvdXRNZS52YWx1ZSA9IHVzZXJBYm91dE1lLnRleHRDb250ZW50O1xyXG4gIH1cclxuXHJcbiAgc2V0VXNlckluZm8oKSB7XHJcbiAgICB1c2VyTmFtZS50ZXh0Q29udGVudCA9IHRoaXMuX3VzZXJOYW1lLnZhbHVlO1xyXG4gICAgdXNlckFib3V0TWUudGV4dENvbnRlbnQgPSB0aGlzLl91c2VyQWJvdXRNZS52YWx1ZTtcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XHJcbmltcG9ydCB7IGJ0bkRlbGV0ZUNvbmZpcm1hdGlvbiwgY2xvc2VEZWxldGVQb3B1cCB9IGZyb20gXCIuLi91dGlscy9EYXRhLmpzXCI7XHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwQ29uZmlybWF0aW9uIGV4dGVuZHMgUG9wdXAge1xyXG4gIGNvbnN0cnVjdG9yKHsgc3VibWl0SGFuZGxlciB9LCBwb3B1cCkge1xyXG4gICAgc3VwZXIocG9wdXApO1xyXG4gICAgdGhpcy5fc3VibWl0SGFuZGxlciA9IHN1Ym1pdEhhbmRsZXI7XHJcbiAgICB0aGlzLl9mb3JtID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcihcIi5mb3JtXCIpO1xyXG4gIH1cclxuXHJcbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICBidG5EZWxldGVDb25maXJtYXRpb24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChldnQpID0+IHtcclxuICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgIGV2dC5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKTtcclxuXHJcbiAgICAgIHRoaXMuX3N1Ym1pdEhhbmRsZXIoKTtcclxuICAgICAgdGhpcy5jbG9zZSgpO1xyXG4gICAgfSk7XHJcbiAgICBjbG9zZURlbGV0ZVBvcHVwLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZXZ0KSA9PiB7XHJcbiAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cclxuICAgICAgdGhpcy5jbG9zZSgpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG4gIHN1Ym1pdEZ1bmN0aW9ucygpIHtcclxuICAgIGJ0bkRlbGV0ZUNvbmZpcm1hdGlvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGV2dCkgPT4ge1xyXG4gICAgICBldnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgZXZ0LnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpO1xyXG4gICAgICB0aGlzLl9zdWJtaXRIYW5kbGVyKCk7XHJcbiAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgIH0pO1xyXG4gICAgY2xvc2VEZWxldGVQb3B1cC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGV2dCkgPT4ge1xyXG4gICAgICBldnQucHJldmVudERlZmF1bHQoKTtcclxuXHJcbiAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgIH0pO1xyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQgXCIuL3N0eWxlcy9pbmRleC5jc3NcIjtcclxuXHJcbmltcG9ydCB7XHJcbiAgYnRuRWRpdFByb2ZpbGUsXHJcbiAgcG9wdXBFZGl0UHJvZmlsZSxcclxuICBwb3B1cFBob3RvLFxyXG4gIHBvcHVwQWRkTmV3UGxhY2UsXHJcbiAgYnRuQWRkTmV3UGxhY2UsXHJcbiAgcG9wdXBEZWxldGVDYXJkLFxyXG4gIGFwaSxcclxuICBwb3B1cFVwZGF0ZUF2YXRhcixcclxuICBidG5VcGRhdGVBdmF0YXIsXHJcbiAgcHJvZmlsZUF2YXRhcixcclxuICB1c2VyTmFtZUlucHV0LFxyXG4gIHVzZXJQcm9mZXNzaW9uSW5wdXQsXHJcbiAgdXNlck5hbWUsXHJcbiAgdXNlckFib3V0TWUsXHJcbn0gZnJvbSBcIi4vc2NyaXB0L3V0aWxzL0RhdGEuanNcIjtcclxuXHJcbmltcG9ydCBTZWN0aW9uIGZyb20gXCIuL3NjcmlwdC9jb21wb25lbnRzL1NlY3Rpb24uanNcIjtcclxuaW1wb3J0IHsgRm9ybVZhbGlkYXRvciB9IGZyb20gXCIuL3NjcmlwdC9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanNcIjtcclxuaW1wb3J0IHsgQ2FyZCwgY2FyZHNDb250YWluZXIgfSBmcm9tIFwiLi9zY3JpcHQvY29tcG9uZW50cy9DYXJkLmpzXCI7XHJcbmltcG9ydCBQb3B1cFdpdGhJbWFnZSBmcm9tIFwiLi9zY3JpcHQvY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qc1wiO1xyXG5pbXBvcnQgUG9wdXBXaXRoRm9ybSBmcm9tIFwiLi9zY3JpcHQvY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzXCI7XHJcbmltcG9ydCB7IFVzZXJJbmZvIH0gZnJvbSBcIi4vc2NyaXB0L2NvbXBvbmVudHMvVXNlckluZm8uanNcIjtcclxuaW1wb3J0IFBvcHVwQ29uZmlybWF0aW9uIGZyb20gXCIuL3NjcmlwdC9jb21wb25lbnRzL1BvcHVwV2l0aENvbmZpcm1hdGlvblwiO1xyXG5cclxuLy8gb2JqZXRvcyBwYXJhIHZhbGlkYXJcclxuXHJcbmNvbnN0IHZhbGlkYXRpb25PYmplY3QgPSB7XHJcbiAgZm9ybVNlbGVjdG9yOiBcInByb2ZpbGVcIixcclxuICBpbnB1dFNlbGVjdG9yOiBcIi5mb3JtX19pbnB1dFwiLFxyXG4gIHN1Ym1pdEJ1dHRvblNlbGVjdG9yOiBcIi5mb3JtX19zdWJtaXQtYnV0dG9uXCIsXHJcbiAgaW5hY3RpdmVCdXR0b25DbGFzczogXCJmb3JtX19zdWJtaXQtYnV0dG9uX2luYWN0aXZlXCIsXHJcbiAgaW5wdXRFcnJvckNsYXNzOiBcImZvcm1fX2lucHV0X3R5cGVfZXJyb3JcIixcclxuICBlcnJvckNsYXNzOiBcImZvcm1fX2lucHV0LWVycm9yX2FjdGl2ZVwiLFxyXG59O1xyXG5cclxuY29uc3QgdmFsaWRhdGlvbk9iamVjdDIgPSB7XHJcbiAgZm9ybVNlbGVjdG9yOiBcInBsYWNlXCIsXHJcbiAgaW5wdXRTZWxlY3RvcjogXCIuZm9ybV9faW5wdXRcIixcclxuICBzdWJtaXRCdXR0b25TZWxlY3RvcjogXCIuZm9ybV9fc3VibWl0LWJ1dHRvblwiLFxyXG4gIGluYWN0aXZlQnV0dG9uQ2xhc3M6IFwiZm9ybV9fc3VibWl0LWJ1dHRvbl9pbmFjdGl2ZVwiLFxyXG4gIGlucHV0RXJyb3JDbGFzczogXCJmb3JtX19pbnB1dF90eXBlX2Vycm9yXCIsXHJcbiAgZXJyb3JDbGFzczogXCJmb3JtX19pbnB1dC1lcnJvcl9hY3RpdmVcIixcclxufTtcclxuXHJcbmNvbnN0IHZhbGlkYXRpb25PYmplY3RBdmF0YXIgPSB7XHJcbiAgZm9ybVNlbGVjdG9yOiBcImF2YXRhclwiLFxyXG4gIGlucHV0U2VsZWN0b3I6IFwiLmZvcm1fX2lucHV0XCIsXHJcbiAgc3VibWl0QnV0dG9uU2VsZWN0b3I6IFwiLmZvcm1fX3N1Ym1pdC1idXR0b25cIixcclxuICBpbmFjdGl2ZUJ1dHRvbkNsYXNzOiBcImZvcm1fX3N1Ym1pdC1idXR0b25faW5hY3RpdmVcIixcclxuICBpbnB1dEVycm9yQ2xhc3M6IFwiZm9ybV9faW5wdXRfdHlwZV9lcnJvclwiLFxyXG4gIGVycm9yQ2xhc3M6IFwiZm9ybV9faW5wdXQtZXJyb3JfYWN0aXZlXCIsXHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgdXNlckRhdGEgPSBuZXcgVXNlckluZm8oXCIjbmFtZS1pbnB1dFwiLCBcIiNhYm91dC1tZS1pbnB1dFwiKTtcclxuXHJcbi8vbGxhbWFuZG8gYSBGb3JtVmFsaWRhdG9yXHJcblxyXG5jb25zdCBQcm9maWxlVmFsaWRhdGlvbiA9IG5ldyBGb3JtVmFsaWRhdG9yKHZhbGlkYXRpb25PYmplY3QpO1xyXG5cclxuUHJvZmlsZVZhbGlkYXRpb24uc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbi8vcHJ1ZWJhIHBhcmEgcGxhY2UgZm9ybVxyXG5jb25zdCBQbGFjZVZhbGlkYXRpb24gPSBuZXcgRm9ybVZhbGlkYXRvcih2YWxpZGF0aW9uT2JqZWN0Mik7XHJcblBsYWNlVmFsaWRhdGlvbi5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuY29uc3QgYXZhdGFyVmFsaWRhdGlvbiA9IG5ldyBGb3JtVmFsaWRhdG9yKHZhbGlkYXRpb25PYmplY3RBdmF0YXIpO1xyXG5hdmF0YXJWYWxpZGF0aW9uLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbi8vcG9wdXAgZm9ybSBwcm9maWxlXHJcbmFwaS5kZWZhdWx0UHJvZmlsZSgpO1xyXG5jb25zdCBmb3JtUG9wdXBQcm9maWxlID0gbmV3IFBvcHVwV2l0aEZvcm0oXHJcbiAge1xyXG4gICAgZm9ybVN1Ym1pdEhhbmRsZXI6IChkYXRhKSA9PiB7XHJcbiAgICAgIC8vIGFxdWkgZW1waWV6YSBjYWxsYmFja1xyXG4gICAgICBmb3JtUG9wdXBQcm9maWxlLnJlbmRlckxvYWRpbmcodHJ1ZSk7XHJcbiAgICAgIGFwaVxyXG4gICAgICAgIC5lZGl0UHJvZmlsZSh7XHJcbiAgICAgICAgICBuYW1lOiBkYXRhLm5hbWUsXHJcbiAgICAgICAgICBhYm91dDogZGF0YVtcImFib3V0LW1lXCJdLFxyXG4gICAgICAgIH0pXHJcblxyXG4gICAgICAgIC5maW5hbGx5KCgpID0+IHtcclxuICAgICAgICAgIGZvcm1Qb3B1cFByb2ZpbGUucmVuZGVyTG9hZGluZyhmYWxzZSk7XHJcbiAgICAgICAgICBQcm9maWxlVmFsaWRhdGlvbi50b2dnbGVCdG5TdGF0ZSgpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICB1c2VyRGF0YS5zZXRVc2VySW5mbygpO1xyXG4gICAgICB1c2VyRGF0YS5nZXRVc2VySW5mbygpO1xyXG4gICAgfSwgLy9hcXVpIHRlcm1pbmFcclxuICB9LFxyXG4gIHBvcHVwRWRpdFByb2ZpbGVcclxuKTtcclxuZm9ybVBvcHVwUHJvZmlsZS5zZXRFdmVudExpc3RlbmVycyhidG5FZGl0UHJvZmlsZSk7XHJcblxyXG4vLyBmdW5jaW9uZXMgZGUgcGVyZmlsXHJcblxyXG4vLyBSZW5kZWl6YXIgaW5pdGlhbCBDYXJkc1xyXG5cclxuZXhwb3J0IGNvbnN0IGFkZGVkQ2FyZHNBcnJheSA9IFtdO1xyXG5leHBvcnQgZnVuY3Rpb24gcmVuZGVyQ2FyZHMoZGF0YUFycmF5KSB7XHJcbiAgZGF0YUFycmF5LmZvckVhY2goKGl0ZW0pID0+IHtcclxuICAgIGFkZGVkQ2FyZHNBcnJheS5wdXNoKGl0ZW0pO1xyXG4gIH0pO1xyXG4gIGNvbnN0IGRlZmF1bHRDYXJkTGlzdCA9IG5ldyBTZWN0aW9uKFxyXG4gICAge1xyXG4gICAgICBpdGVtczogYWRkZWRDYXJkc0FycmF5LFxyXG4gICAgICByZW5kZXJlcjogKGl0ZW0pID0+IHtcclxuICAgICAgICBjb25zdCBjYXJkID0gbmV3IENhcmQoXHJcbiAgICAgICAgICB7XHJcbiAgICAgICAgICAgIGRhdGE6IGl0ZW0sXHJcbiAgICAgICAgICAgIHBob3RvSGFuZGxlcjogKHNyYywgbmFtZSkgPT4ge1xyXG4gICAgICAgICAgICAgIGNvbnN0IHBob3RvID0gbmV3IFBvcHVwV2l0aEltYWdlKHBvcHVwUGhvdG8pO1xyXG4gICAgICAgICAgICAgIHBob3RvLm9wZW4oc3JjLCBuYW1lKTtcclxuICAgICAgICAgICAgICBwaG90by5oYW5kbGVFc2NDbG9zZSgpO1xyXG4gICAgICAgICAgICB9LFxyXG5cclxuICAgICAgICAgICAgZGVsZXRlSGFuZGxlcjogKGlkKSA9PiB7XHJcbiAgICAgICAgICAgICAgY29uc3QgY29uZmlybWF0aW9uID0gbmV3IFBvcHVwQ29uZmlybWF0aW9uKFxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICBzdWJtaXRIYW5kbGVyOiAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgYXBpLmRlbGV0ZUNhcmQoaWQpLnRoZW4oKHJlcykgPT4ge30pO1xyXG4gICAgICAgICAgICAgICAgICAgIGNhcmQudHJhc2hCdG5GdW5jdGlvbnMoKTtcclxuICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBwb3B1cERlbGV0ZUNhcmRcclxuICAgICAgICAgICAgICApO1xyXG5cclxuICAgICAgICAgICAgICBjb25maXJtYXRpb24uc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICAgICAgICAgICAgICBjb25maXJtYXRpb24ub3BlbigpO1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICAgIFwiI2NhcmQtdGVtcGxhdGVcIlxyXG4gICAgICAgICk7XHJcblxyXG4gICAgICAgIGNvbnN0IG5ld0NhcmQgPSBjYXJkLmdlbmVyYXRlQ2FyZCgpO1xyXG4gICAgICAgIGRlZmF1bHRDYXJkTGlzdC5hZGRJdGVtKG5ld0NhcmQpO1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIGNhcmRzQ29udGFpbmVyXHJcbiAgKTtcclxuXHJcbiAgZGVmYXVsdENhcmRMaXN0LnJlbmRlckl0ZW1zKCk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGluaXRpYWxDYXJkc1JlcXVlc3QoKSB7XHJcbiAgY29uc3QgaW5pdGlhbENhcmRzQXBpID0gYXBpLmNhcmRzQWRkZWRSZXF1ZXN0KCk7XHJcbiAgaW5pdGlhbENhcmRzQXBpXHJcbiAgICAudGhlbigocmVzKSA9PiB7XHJcbiAgICAgIGlmIChyZXMub2spIHtcclxuICAgICAgICByZXR1cm4gcmVzLmpzb24oKTtcclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QocmVzLnN0YXR1cyk7XHJcbiAgICB9KVxyXG5cclxuICAgIC50aGVuKChyZXMpID0+IHtcclxuICAgICAgcmVuZGVyQ2FyZHMocmVzKTtcclxuICAgIH0pXHJcblxyXG4gICAgLmNhdGNoKChlcnJvcikgPT4ge1xyXG4gICAgICBjb25zb2xlLmxvZyhgRXJyb3I6ICR7ZXJyb3J9YCk7XHJcbiAgICB9KTtcclxufVxyXG5cclxuaW5pdGlhbENhcmRzUmVxdWVzdCgpO1xyXG5cclxuZnVuY3Rpb24gY3JlYXRlTmV3Q2FyZChpdGVtKSB7XHJcbiAgY29uc3QgYXBpQ2FyZCA9IG5ldyBDYXJkKFxyXG4gICAge1xyXG4gICAgICBkYXRhOiBpdGVtLFxyXG4gICAgICBwaG90b0hhbmRsZXI6IChzcmMsIG5hbWUpID0+IHtcclxuICAgICAgICBjb25zdCBwaG90byA9IG5ldyBQb3B1cFdpdGhJbWFnZShwb3B1cFBob3RvKTtcclxuICAgICAgICBwaG90by5vcGVuKHNyYywgbmFtZSk7XHJcbiAgICAgICAgcGhvdG8uaGFuZGxlRXNjQ2xvc2UoKTtcclxuICAgICAgfSxcclxuXHJcbiAgICAgIGRlbGV0ZUhhbmRsZXI6IChpZCkgPT4ge1xyXG4gICAgICAgIGNvbnN0IGNvbmZpcm1hdGlvbiA9IG5ldyBQb3B1cENvbmZpcm1hdGlvbihcclxuICAgICAgICAgIHtcclxuICAgICAgICAgICAgc3VibWl0SGFuZGxlcjogKCkgPT4ge1xyXG4gICAgICAgICAgICAgIGFwaS5kZWxldGVDYXJkKGlkKTtcclxuICAgICAgICAgICAgICBhcGlDYXJkLnRyYXNoQnRuRnVuY3Rpb25zKCk7XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgICAgcG9wdXBEZWxldGVDYXJkXHJcbiAgICAgICAgKTtcclxuICAgICAgICBjb25maXJtYXRpb24uc3VibWl0RnVuY3Rpb25zKCk7XHJcbiAgICAgICAgY29uZmlybWF0aW9uLm9wZW4oKTtcclxuICAgICAgfSxcclxuICAgIH0sXHJcbiAgICBcIiNjYXJkLXRlbXBsYXRlXCJcclxuICApO1xyXG5cclxuICByZXR1cm4gYXBpQ2FyZC5nZW5lcmF0ZUNhcmQoKTtcclxufVxyXG5cclxuZnVuY3Rpb24gbmV3Q2FyZEFwaSgpIHtcclxuICBjb25zdCBmb3JtUG9wdXBQbGFjZSA9IG5ldyBQb3B1cFdpdGhGb3JtKCAvLyBkZWNsYXJhbmRvIGZvcm1cclxuICAgIHtcclxuICAgICAgZm9ybVN1Ym1pdEhhbmRsZXI6IChuZXdDYXJkKSA9PiB7XHJcbiAgICAgICAgZm9ybVBvcHVwUGxhY2UucmVuZGVyTG9hZGluZyh0cnVlKTtcclxuICAgICAgICBhcGlcclxuICAgICAgICAgIC5hZGROZXdDYXJkUGV0aXRpb24obmV3Q2FyZClcclxuICAgICAgICAgIC50aGVuKChyZXN1bHQpID0+IHtcclxuICAgICAgICAgICAgZG9jdW1lbnRcclxuICAgICAgICAgICAgICAucXVlcnlTZWxlY3RvcihcIi5jYXJkLWNvbnRhaW5lclwiKVxyXG4gICAgICAgICAgICAgIC5wcmVwZW5kKGNyZWF0ZU5ld0NhcmQocmVzdWx0KSk7XHJcbiAgICAgICAgICAgIGZvcm1Qb3B1cFBsYWNlLmNsb3NlKCk7XHJcbiAgICAgICAgICB9KVxyXG4gICAgICAgICAgLmZpbmFsbHkoKCkgPT4ge1xyXG4gICAgICAgICAgICBmb3JtUG9wdXBQbGFjZS5yZW5kZXJMb2FkaW5nKGZhbHNlKTtcclxuICAgICAgICAgICAgUGxhY2VWYWxpZGF0aW9uLnRvZ2dsZUJ0blN0YXRlKCk7XHJcbiAgICAgICAgICB9KTtcclxuICAgICAgICBmb3JtUG9wdXBQbGFjZS5yZXNldElucHV0cygpO1xyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHBvcHVwQWRkTmV3UGxhY2VcclxuICApO1xyXG4gIGZvcm1Qb3B1cFBsYWNlLnNldEV2ZW50TGlzdGVuZXJzKGJ0bkFkZE5ld1BsYWNlKTtcclxufVxyXG5cclxubmV3Q2FyZEFwaSgpO1xyXG5cclxuZnVuY3Rpb24gcmVuZGVyQXZhdGFyKGF2YXRhclVybCkge1xyXG4gIHByb2ZpbGVBdmF0YXIuc3JjID0gYXZhdGFyVXJsO1xyXG59XHJcbmNvbnN0IG5ld1BwZGF0ZUF2YXRhciA9IG5ldyBQb3B1cFdpdGhGb3JtKFxyXG4gIHtcclxuICAgIGZvcm1TdWJtaXRIYW5kbGVyOiAoZGF0YSkgPT4ge1xyXG4gICAgICBuZXdQcGRhdGVBdmF0YXIucmVuZGVyTG9hZGluZyh0cnVlKTtcclxuICAgICAgYXBpXHJcbiAgICAgICAgLnVwZGF0ZUF2YXRhcih7XHJcbiAgICAgICAgICBhdmF0YXI6IGRhdGEudXBkYXRlQXZhdGFyLFxyXG4gICAgICAgIH0pXHJcbiAgICAgICAgLnRoZW4oKHJlcykgPT4ge1xyXG4gICAgICAgICAgcmVuZGVyQXZhdGFyKHJlcy5hdmF0YXIpO1xyXG4gICAgICAgIH0pXHJcbiAgICAgICAgLmZpbmFsbHkoKCkgPT4ge1xyXG4gICAgICAgICAgbmV3UHBkYXRlQXZhdGFyLnJlbmRlckxvYWRpbmcoZmFsc2UpO1xyXG4gICAgICAgICAgYXZhdGFyVmFsaWRhdGlvbi50b2dnbGVCdG5TdGF0ZSgpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICBuZXdQcGRhdGVBdmF0YXIucmVzZXRJbnB1dHMoKTtcclxuICAgIH0sXHJcbiAgfSxcclxuICBwb3B1cFVwZGF0ZUF2YXRhclxyXG4pO1xyXG5uZXdQcGRhdGVBdmF0YXIuc2V0RXZlbnRMaXN0ZW5lcnMoYnRuVXBkYXRlQXZhdGFyKTtcclxuIl0sIm5hbWVzIjpbIkFwaSIsIl9yZWYiLCJiYXNlVXJsIiwiaGVhZGVycyIsIl9jbGFzc0NhbGxDaGVjayIsInRoaXMiLCJfYmFzZVVybCIsIl9oZWFkZXJzIiwiX2F1dGhvcml6YXRpb24iLCJhdXRob3JpemF0aW9uIiwia2V5IiwidmFsdWUiLCJ1c2VyRGF0YSIsInVzZXJOYW1lIiwidGV4dENvbnRlbnQiLCJuYW1lIiwidXNlckFib3V0TWUiLCJhYm91dCIsInVzZXJBdmF0YXIiLCJzcmMiLCJhdmF0YXIiLCJfdGhpcyIsImZldGNoIiwiY29uY2F0IiwidGhlbiIsInJlcyIsIm9rIiwianNvbiIsIlByb21pc2UiLCJyZWplY3QiLCJzdGF0dXMiLCJyZW5kZXJSZXN1bHRzIiwiY2F0Y2giLCJlcnJvciIsImNvbnNvbGUiLCJsb2ciLCJuZXdQcm9maWxlIiwibWV0aG9kIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJkYXRhIiwiY2FyZElkIiwicHJvZmlsZSIsIm5ld0NhcmQiLCJwbGFjZU5hbWUiLCJsaW5rIiwiYXBpIiwiYnRuRWRpdFByb2ZpbGUiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJwb3B1cEVkaXRQcm9maWxlIiwiYnRuQWRkTmV3UGxhY2UiLCJwb3B1cEFkZE5ld1BsYWNlIiwicG9wdXBQaG90byIsImxpbmtQb3B1cCIsImNhcHRpb25Qb3B1cCIsImJ0bkNsb3NlUGhvdG8iLCJidG5EZWxldGVDb25maXJtYXRpb24iLCJwb3B1cERlbGV0ZUNhcmQiLCJjbG9zZURlbGV0ZVBvcHVwIiwicG9wdXBVcGRhdGVBdmF0YXIiLCJidG5VcGRhdGVBdmF0YXIiLCJwcm9maWxlQXZhdGFyIiwiU2VjdGlvbiIsImNvbnRhaW5lclNlbGVjdG9yIiwiaXRlbXMiLCJyZW5kZXJlciIsIl9pdGVtc0FycmF5IiwiX3JlbmRlcmVyIiwiX2NvbnRhaW5lciIsIml0ZW0iLCJwcmVwZW5kIiwiZm9yRWFjaCIsInJlZ0V4IiwiRm9ybVZhbGlkYXRvciIsIm9ialRvVmFsaWRhdGUiLCJfZm9ybVNlbGVjdG9yIiwiZm9ybVNlbGVjdG9yIiwiX2lucHV0U2VsZWN0b3IiLCJpbnB1dFNlbGVjdG9yIiwiX3N1Ym1pdEJ1dHRvblNlbGVjdG9yIiwic3VibWl0QnV0dG9uU2VsZWN0b3IiLCJfaW5hY3RpdmVCdXR0b25DbGFzcyIsImluYWN0aXZlQnV0dG9uQ2xhc3MiLCJfaW5wdXRFcnJvckNsYXNzIiwiaW5wdXRFcnJvckNsYXNzIiwiX2Vycm9yQ2xhc3MiLCJlcnJvckNsYXNzIiwiZXZ0IiwidGFyZ2V0IiwiX2NoZWNrSW5wdXRWYWxpZGl0eSIsImV4cHJlc2lvbiIsImlucHV0RWxlbWVudCIsImZvcm1JRCIsImZvcm1FbGVtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJlcnJvckVsZW1lbnQiLCJpZCIsInRlc3QiLCJjbGFzc0xpc3QiLCJyZW1vdmUiLCJ2YWxpZGF0aW9uTWVzc2FnZSIsImFkZCIsIkFycmF5IiwiZnJvbSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJzb21lIiwidmFsaWRpdHkiLCJ2YWxpZCIsImJ0bkVsZW1lbnQiLCJfaGFzSW52YWxpZElucHV0Iiwic2V0QXR0cmlidXRlIiwicmVtb3ZlQXR0cmlidXRlIiwiaW5wdXRzTGlzdCIsInRvZ2dsZUJ0blN0YXRlIiwiYWRkRXZlbnRMaXN0ZW5lciIsInN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbiIsInN3aXRjaGluZ0lucHV0IiwiY2FyZHNDb250YWluZXIiLCJDYXJkIiwidGVtcGxhdGVTZWxlY3RvciIsInBob3RvSGFuZGxlciIsImRlbGV0ZUhhbmRsZXIiLCJfbmFtZSIsIl9saW5rIiwiX2lkIiwiX2xpa2VzIiwibGlrZXMiLCJfdGVtcGxhdGVTZWxlY3RvciIsIl9waG90b0hhbmRsZXIiLCJfZGVsZXRlSGFuZGxlciIsImNvbnRlbnQiLCJjbG9uZU5vZGUiLCJfY2FyZEVsZW1lbnQiLCJnZXRUZW1wbGF0ZSIsImFsdCIsImxlbmd0aCIsIl9zZXRFdmVudExpc3RlbmVycyIsIl9oYW5kbGVPcGVuUG9wdXAiLCJfaGFuZGxlQ2xvc2VQb3B1cCIsInRvZ2dsZSIsImNvbnRhaW5zIiwiYWRkTGlrZSIsImxpa2VzaW5pdEFycmF5IiwiZGVsZXRlTGlrZSIsImNsb3Nlc3QiLCJQb3B1cCIsInBvcHVwIiwiX3BvcHVwIiwiX2Zvcm0iLCJwcmV2ZW50RGVmYXVsdCIsImNsb3NlIiwib3BlbkJ1dHRvbiIsIl90aGlzMiIsIm9wZW4iLCJoYW5kbGVFc2NDbG9zZSIsIlBvcHVwV2l0aEltYWdlIiwiX1BvcHVwIiwiX2luaGVyaXRzIiwiX3N1cGVyIiwiY2FsbCIsIl9nZXQiLCJfZ2V0UHJvdG90eXBlT2YiLCJwcm90b3R5cGUiLCJfcGhvdG8iLCJfY2FwdGlvbiIsIlBvcHVwV2l0aEZvcm0iLCJmb3JtU3VibWl0SGFuZGxlciIsIl9mb3JtU3VibWl0SGFuZGxlciIsInJlc2V0IiwiX2lucHV0TGlzdCIsImZvcm1WYWx1ZXMiLCJpbnB1dCIsIl90aGlzMyIsImdldElucHV0VmFsdWVzIiwiaXNMb2FkaW5nIiwiVXNlckluZm8iLCJpbnB1dE5hbWVTZWxlY3RvciIsImlucHV0QWJvdXRTZWxlY3RvciIsIl91c2VyTmFtZSIsIl91c2VyQWJvdXRNZSIsIlBvcHVwQ29uZmlybWF0aW9uIiwic3VibWl0SGFuZGxlciIsIl9zdWJtaXRIYW5kbGVyIiwiUHJvZmlsZVZhbGlkYXRpb24iLCJzZXRFdmVudExpc3RlbmVycyIsIlBsYWNlVmFsaWRhdGlvbiIsImF2YXRhclZhbGlkYXRpb24iLCJkZWZhdWx0UHJvZmlsZSIsImZvcm1Qb3B1cFByb2ZpbGUiLCJyZW5kZXJMb2FkaW5nIiwiZWRpdFByb2ZpbGUiLCJmaW5hbGx5Iiwic2V0VXNlckluZm8iLCJnZXRVc2VySW5mbyIsImZvcm1Qb3B1cFBsYWNlIiwiYWRkZWRDYXJkc0FycmF5IiwiY2FyZHNBZGRlZFJlcXVlc3QiLCJkYXRhQXJyYXkiLCJwdXNoIiwiZGVmYXVsdENhcmRMaXN0IiwiY2FyZCIsInBob3RvIiwiY29uZmlybWF0aW9uIiwiZGVsZXRlQ2FyZCIsInRyYXNoQnRuRnVuY3Rpb25zIiwiZ2VuZXJhdGVDYXJkIiwiYWRkSXRlbSIsInJlbmRlckl0ZW1zIiwicmVuZGVyQ2FyZHMiLCJhZGROZXdDYXJkUGV0aXRpb24iLCJyZXN1bHQiLCJhcGlDYXJkIiwic3VibWl0RnVuY3Rpb25zIiwicmVzZXRJbnB1dHMiLCJuZXdQcGRhdGVBdmF0YXIiLCJ1cGRhdGVBdmF0YXIiLCJhdmF0YXJVcmwiXSwic291cmNlUm9vdCI6IiJ9