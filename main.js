!function(){"use strict";function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},t(e)}function e(e,n){for(var r=0;r<n.length;r++){var o=n[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,n){if("object"!==t(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==t(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===t(i)?i:String(i)),o)}var i}var n=new(function(){function t(e){var n=e.baseUrl,r=e.headers;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._baseUrl=n,this._headers=r,this._authorization=r.authorization}var n,r;return n=t,(r=[{key:"renderResults",value:function(t){i.textContent=t.name,u.textContent=t.about,a.src=t.avatar}},{key:"defaultProfile",value:function(){var t=this;return fetch("".concat(this._baseUrl,"/users/me"),{headers:{authorization:this._authorization}}).then((function(t){return t.ok?t.json():Promise.reject(t.status)})).then((function(e){t.renderResults(e)})).catch((function(t){console.log("Error: ".concat(t))}))}},{key:"editProfile",value:function(t){return fetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:{authorization:this._authorization,"content-Type":"application/json"},body:JSON.stringify({name:t.name,about:t.about})}).then((function(t){return t.ok?t.json():Promise.reject(t.status)})).then((function(t){console.log(t)})).catch((function(t){console.log("Error: ".concat(t))}))}},{key:"updateAvatar",value:function(t){return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:{authorization:this._authorization,"content-Type":"application/json"},body:JSON.stringify({avatar:t.avatar})}).then((function(t){return t.ok?t.json():Promise.reject(t.status)})).catch((function(t){console.log("Error: ".concat(t))}))}},{key:"addLike",value:function(t){return fetch("".concat(this._baseUrl,"/cards/likes/").concat(t),{method:"PUT",headers:{authorization:this._authorization,"content-Type":"application/json"},body:JSON.stringify({name:profile.name,about:profile.about})}).then((function(t){return t.ok?t.json():Promise.reject(t.status)})).catch((function(t){console.log("Error: ".concat(t))}))}},{key:"deleteLike",value:function(t){return fetch("".concat(this._baseUrl,"/cards/likes/").concat(t),{method:"DELETE",headers:{authorization:this._authorization,"content-Type":"application/json"},body:JSON.stringify({name:profile.name,about:profile.about})}).then((function(t){return t.ok?t.json():Promise.reject(t.status)})).catch((function(t){console.log("Error: ".concat(t))}))}},{key:"cardsAddedRequest",value:function(){return fetch("".concat(this._baseUrl,"/cards"),{headers:{authorization:this._authorization}})}},{key:"addNewCardPetition",value:function(t){return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:{authorization:this._authorization,"content-Type":"application/json"},body:JSON.stringify({name:t.placeName,link:t.link})}).then((function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status))})).catch((function(t){console.log("Error: ".concat(t))}))}},{key:"deleteCard",value:function(t){return fetch("".concat(this._baseUrl,"/cards/").concat(t),{method:"DELETE",headers:{authorization:this._authorization,"content-Type":"application/json"}}).then((function(t){return t.ok?t.json():Promise.reject(t.status)})).catch((function(t){console.log("Error: ".concat(t))}))}},{key:"returnCardInfo",value:function(t){return fetch("".concat(this._baseUrl,"/cards/").concat(t),{method:"GET",headers:{authorization:this._authorization}}).then((function(t){return t.ok?t.json():Promise.reject(t.status)})).catch((function(t){console.log("Error: ".concat(t))}))}}])&&e(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}())({baseUrl:"https://around.nomoreparties.co/v1/web_es_07/",headers:{authorization:"d73ff8a4-5ad7-42cb-999c-d084ca2e6847","content-Type":"application/json"}}),r=document.querySelector(".edit-button"),o=(document.querySelector(".form__submit-button"),document.querySelector(".form__close-button"),document.querySelector(".popup_type_edit-profile")),i=document.querySelector(".profile__user-name"),u=document.querySelector(".profile__user-profession"),a=document.querySelector(".profile__avatar"),c=(document.querySelector("#name-input"),document.querySelector("#about-me-input"),document.querySelector(".add-button")),l=(document.querySelector(".form__close-button_type_new-place"),document.querySelector(".popup_type_new-place")),s=(document.querySelector(".form__submit-button_place"),document.querySelector(".card-container"),document.querySelector(".popup_type_photo")),f=document.querySelector(".popup__photo"),p=document.querySelector(".popup__photo-caption"),y=document.querySelector(".popup__close-button"),m=document.querySelector(".form__submit-button_delete"),d=document.querySelector(".popup_type_delete"),h=document.querySelector(".form__close-button_type_delete"),b=document.querySelector(".popup_type_update-avatar"),v=document.querySelector(".profile__avatar-overlay"),_=document.querySelector(".profile__avatar");function S(t){return S="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},S(t)}function g(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==S(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==S(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===S(o)?o:String(o)),r)}var o}var w=function(){function t(e,n){var r=e.items,o=e.renderer;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._itemsArray=r,this._renderer=o,this._container=n}var e,n;return e=t,(n=[{key:"addItem",value:function(t){this._container.prepend(t)}},{key:"renderItems",value:function(){var t=this;this._itemsArray.forEach((function(e){t._renderer(e)}))}}])&&g(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function k(t){return k="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},k(t)}function E(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==k(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==k(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===k(o)?o:String(o)),r)}var o}var j=/^[A-Za-z\-]{2,100}$/,P=/^[A-Za-z\-]{2,20}$/,O=/^[A-Za-z\-]{3,20}$/,C=/^[A-Za-z\-]{4,500}$/,q=/^[A-Za-z\-]{4,500}$/,L=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass}var e,n;return e=t,(n=[{key:"switchingInput",value:function(t){switch(t.target.name){case"name":this._checkInputValidity(j,t.target,this._formSelector);break;case" aboutMe":this._checkInputValidity(P,t.target,this._formSelector);break;case"placeName":this._checkInputValidity(O,t.target,this._formSelector);break;case"link":this._checkInputValidity(C,t.target,this._formSelector);break;case"updateAvatar":this._checkInputValidity(q,t.target,this._formSelector)}}},{key:"_checkInputValidity",value:function(t,e,n){var r=document.getElementById(n).querySelector(".".concat(e.id,"-error"));t.test(e.value)?(r.classList.remove(this._errorClass),e.classList.remove(this._inputErrorClass),r.textContent=""):(r.textContent=e.validationMessage,r.classList.add(this._errorClass),e.classList.add(this._inputErrorClass))}},{key:"isValid",value:function(t){return document.getElementById(t).querySelectorAll(this._inputSelector).every((function(t){return t.validity.valid}))}},{key:"toggleBtnState",value:function(t){var e=document.getElementById(t).querySelector(this._submitButtonSelector);!0===this.isValid(t)?e.classList.remove(this._inactiveButtonClass):e.classList.add(this._inactiveButtonClass)}},{key:"enableValidation",value:function(){var t=this,e=document.getElementById(this._formSelector),n=Array.from(e.querySelectorAll(this._inputSelector));this.toggleBtnState(this._formSelector),n.forEach((function(e){e.addEventListener("input",(function(e){t.switchingInput(e),t.toggleBtnState(t._formSelector)}))}))}}])&&E(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function T(t){return T="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},T(t)}function B(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==T(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==T(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===T(o)?o:String(o)),r)}var o}var I=document.querySelector(".card-container"),R=function(){function t(e,n){var r=e.data,o=e.photoHandler,i=e.deleteHandler;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=r.name,this._link=r.link,this._id=r._id,this._likes=r.likes,this._templateSelector=n,this._photoHandler=o,this._deleteHandler=i,this._likes=r.likes}var e,r;return e=t,(r=[{key:"getTemplate",value:function(){return document.querySelector(this._templateSelector).content.querySelector(".place-card").cloneNode(!0)}},{key:"generateCard",value:function(){return this._cardElement=this.getTemplate(),this._cardElement.querySelector(".place-card__name").textContent=this._name,this._cardElement.querySelector(".place-card__photo").src=this._link,this._cardElement.id=this._id,this._cardElement.querySelector(".like-button-counter").textContent=this._likes.length,this._setEventListeners(),this._cardElement}},{key:"_handleOpenPopup",value:function(){this._photoHandler(this._link,this._name)}},{key:"_handleClosePopup",value:function(){f.src=" ",p.textContent=" ",s.classList.remove("popup_opened")}},{key:"likeadding",value:function(){}},{key:"_setEventListeners",value:function(){var t=this;this._cardElement.querySelector(".place-card__photo").addEventListener("click",(function(){t._handleOpenPopup()})),y.addEventListener("click",(function(){t._handleClosePopup()})),this._cardElement.querySelector(".trash-button").addEventListener("click",(function(e){t._deleteHandler(t._cardElement.id)})),this._cardElement.querySelector(".like-button").addEventListener("click",(function(e){e.target.classList.toggle("like-button_active"),e.target.classList.contains("like-button_active")?n.addLike(t._cardElement.id).then((function(e){var n=e.likes;t._cardElement.querySelector(".like-button-counter").textContent=n.length})):n.deleteLike(t._cardElement.id).then((function(e){var n=e.likes;t._cardElement.querySelector(".like-button-counter").textContent=n.length}))}))}},{key:"trashBtnFunctions",value:function(){this._cardElement.querySelector(".trash-button").closest(".place-card").remove()}}])&&B(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function z(t){return z="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},z(t)}function H(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==z(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==z(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===z(o)?o:String(o)),r)}var o}var x=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._popup=e,this._form=e.querySelector(".form")}var e,n;return e=t,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened")}},{key:"close",value:function(){this._popup.classList.remove("popup_opened")}},{key:"_handleEscClose",value:function(){var t=this;document.addEventListener("keydown",(function(e){e.preventDefault,"Escape"===e.key&&t.close()}))}},{key:"setEventListeners",value:function(t){var e=this;t.addEventListener("click",(function(){e.open()})),this._handleEscClose(),this._form.querySelector(".form__close-button").addEventListener("click",(function(t){t.preventDefault(),e.close()}))}}])&&H(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function A(t){return A="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},A(t)}function U(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==A(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==A(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===A(o)?o:String(o)),r)}var o}function V(){return V="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=N(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},V.apply(this,arguments)}function D(t,e){return D=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},D(t,e)}function N(t){return N=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},N(t)}var F=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&D(t,e)}(u,t);var e,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=N(r);if(o){var n=N(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===A(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t){return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),i.call(this,t)}return e=u,(n=[{key:"open",value:function(t,e){V(N(u.prototype),"open",this).call(this),this._photo=document.querySelector(".popup__photo").src=t,this._caption=document.querySelector(".popup__photo-caption").textContent=e}}])&&U(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),u}(x);function J(t){return J="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},J(t)}function M(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==J(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==J(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===J(o)?o:String(o)),r)}var o}function Z(){return Z="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=G(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},Z.apply(this,arguments)}function $(t,e){return $=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},$(t,e)}function G(t){return G=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},G(t)}var K=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&$(t,e)}(u,t);var e,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=G(r);if(o){var n=G(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===J(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t,e){var n,r=t.formSubmitHandler;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,e))._formSubmitHandler=r,n._form=n._popup.querySelector(".form"),n}return e=u,(n=[{key:"close",value:function(){var t=this;Z(G(u.prototype),"close",this).call(this),this._form.id,this._form.reset(),this._popup.querySelector(".overlay").addEventListener("click",(function(e){t._popup.classList.remove("popup_opened"),e.stopImmediatePropagation()}))}},{key:"getInputValues",value:function(){this._inputList=this._form.querySelectorAll(".form__input");var t={};return this._inputList.forEach((function(e){t[e.name]=e.value})),t}},{key:"setEventListeners",value:function(t){var e=this;this.getInputValues(),Z(G(u.prototype),"setEventListeners",this).call(this,t),this._form.addEventListener("submit",(function(t){t.preventDefault(),t.stopImmediatePropagation(),e._formSubmitHandler(e.getInputValues()),document.forms.place.reset()}))}},{key:"renderLoading",value:function(t){t?this._form.querySelector(".form__submit-button").textContent="Guardando...":(this._form.querySelector(".form__submit-button").textContent="Guardado",this.close())}}])&&M(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),u}(x);function Q(t){return Q="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},Q(t)}function W(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==Q(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==Q(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===Q(o)?o:String(o)),r)}var o}var X=function(){function t(e){var n=e.data;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._userName=n.name,this._userAboutMe=n["about-me"]}var e,n;return e=t,(n=[{key:"getUserInfo",value:function(){this._userName=i.textContent,this._userAboutMe=u.textContent}},{key:"setUserInfo",value:function(){i.textContent=this._userName,u.textContent=this._userAboutMe}}])&&W(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function Y(t){return Y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},Y(t)}function tt(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==Y(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==Y(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===Y(o)?o:String(o)),r)}var o}function et(t,e){return et=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},et(t,e)}function nt(t){return nt=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},nt(t)}var rt=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&et(t,e)}(u,t);var e,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=nt(r);if(o){var n=nt(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===Y(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t,e){var n,r=t.submitHandler;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,e))._submitHandler=r,n._form=n._popup.querySelector(".form"),n}return e=u,(n=[{key:"setEventListeners",value:function(){var t=this;m.addEventListener("click",(function(e){e.preventDefault(),e.stopImmediatePropagation(),t._submitHandler(),t.close()})),h.addEventListener("click",(function(e){e.preventDefault(),t.close()}))}},{key:"submitFunctions",value:function(){var t=this;m.addEventListener("click",(function(e){e.preventDefault(),e.stopImmediatePropagation(),t._submitHandler(),t.close()})),h.addEventListener("click",(function(e){e.preventDefault(),t.close()}))}}])&&tt(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),u}(x);new L({formSelector:"profile",inputSelector:".form__input",submitButtonSelector:".form__submit-button",inactiveButtonClass:"form__submit-button_inactive",inputErrorClass:"form__input_type_error",errorClass:"form__input-error_active"}).enableValidation(),new L({formSelector:"place",inputSelector:".form__input",submitButtonSelector:".form__submit-button",inactiveButtonClass:"form__submit-button_inactive",inputErrorClass:"form__input_type_error",errorClass:"form__input-error_active"}).enableValidation(),new L({formSelector:"avatar",inputSelector:".form__input",submitButtonSelector:".form__submit-button",inactiveButtonClass:"form__submit-button_inactive",inputErrorClass:"form__input_type_error",errorClass:"form__input-error_active"}).enableValidation(),n.defaultProfile();var ot=new K({formSubmitHandler:function(t){ot.renderLoading(!0),n.editProfile({name:t.name,about:t["about-me"]}).then((function(t){!function(t){var e=new X({data:t});e.setUserInfo(),e.getUserInfo()}(t)})).finally((function(){ot.renderLoading(!1)}))}},o);ot.setEventListeners(r);var it,ut=[];n.cardsAddedRequest().then((function(t){return t.ok?t.json():Promise.reject(t.status)})).then((function(t){!function(t){t.forEach((function(t){ut.push(t)}));var e=new w({items:ut,renderer:function(t){var r=new R({data:t,photoHandler:function(t,e){new F(s).open(t,e)},deleteHandler:function(t){var e=new rt({submitHandler:function(){n.deleteCard(t).then((function(t){})),r.trashBtnFunctions()}},d);e.setEventListeners(),e.open()}},"#card-template"),o=r.generateCard();e.addItem(o)}},I);e.renderItems()}(t)})).catch((function(t){console.log("Error: ".concat(t))})),(it=new K({formSubmitHandler:function(t){it.renderLoading(!0),n.addNewCardPetition(t).then((function(t){var e;document.querySelector(".card-container").prepend((e=new R({data:t,photoHandler:function(t,e){new F(s).open(t,e)},deleteHandler:function(t){var r=new rt({submitHandler:function(){n.deleteCard(t),e.trashBtnFunctions()}},d);r.submitFunctions(),r.open()}},"#card-template")).generateCard()),it.close()})).finally((function(){ot.renderLoading(!1)}))}},l)).setEventListeners(c);var at=new K({formSubmitHandler:function(t){at.renderLoading(!0),n.updateAvatar({avatar:t.updateAvatar}).then((function(t){var e;e=t.avatar,_.src=e})).finally((function(){at.renderLoading(!1)}))}},b);at.setEventListeners(v)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,